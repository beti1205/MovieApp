Index: app/src/main/java/com/example/movieplayer/ui/movies/MovieFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.ui.movies\n\nimport android.content.Context\nimport android.content.SharedPreferences\nimport android.os.Bundle\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.widget.Toast\nimport androidx.core.content.edit\nimport androidx.core.view.MenuProvider\nimport androidx.core.view.doOnPreDraw\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.navigation.fragment.FragmentNavigatorExtras\nimport androidx.navigation.fragment.findNavController\nimport androidx.recyclerview.widget.GridLayoutManager\nimport com.example.movieplayer.R\nimport com.example.movieplayer.databinding.MovieListBinding\nimport com.example.movieplayer.feature.fetchmovies.domain.MovieOrder\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.flow.collectLatest\nimport kotlinx.coroutines.launch\n\n@AndroidEntryPoint\nclass MovieFragment : Fragment(R.layout.movie_list) {\n\n    private val viewModel: MovieViewModel by viewModels()\n\n    private val sharedPreferences: SharedPreferences? by lazy {\n        activity?.getPreferences(Context.MODE_PRIVATE)\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n        val binding: MovieListBinding = MovieListBinding.bind(requireView())\n\n        binding.lifecycleOwner = viewLifecycleOwner\n        binding.viewModel = viewModel\n\n        binding.movieRecyclerView.layoutManager = GridLayoutManager(context, 2)\n\n        val movieAdapter = MovieAdapter { itemView, movie ->\n            val extras = FragmentNavigatorExtras(\n                itemView to getString(R.string.movie_card_detail_transition_name)\n            )\n            findNavController().navigate(\n                MovieFragmentDirections.actionMovieFragmentToMovieDetailsFragment(\n                    movie\n                ),\n                extras\n            )\n        }\n        binding.movieRecyclerView.adapter = movieAdapter\n\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewModel.movies.collectLatest { pagingData ->\n                movieAdapter.submitData(pagingData)\n            }\n        }\n\n        viewModel.eventNetworkError.observe(viewLifecycleOwner) { isNetworkError ->\n            if (isNetworkError) onNetworkError()\n        }\n\n        val savedOrder = restoreOrder()\n        val selectedChipId = when (savedOrder) {\n            MovieOrder.TOP_RATED -> R.id.topRated\n            MovieOrder.UPCOMING -> R.id.upcoming\n            MovieOrder.NOW_PLAYING -> R.id.nowPlaying\n            else -> R.id.popular\n        }\n        binding.chipGroup.check(selectedChipId)\n        viewModel.onOrderChanged(savedOrder)\n\n        binding.chipGroup.setOnCheckedChangeListener { _, checkedId ->\n            val order = when (checkedId) {\n                R.id.topRated -> MovieOrder.TOP_RATED\n                R.id.upcoming -> MovieOrder.UPCOMING\n                R.id.nowPlaying -> MovieOrder.NOW_PLAYING\n                else -> MovieOrder.POPULAR\n            }\n\n            viewModel.onOrderChanged(order)\n            saveOrder(order)\n        }\n\n        activity?.addMenuProvider(\n            object : MenuProvider {\n                override fun onCreateMenu(menu: Menu, menuInflater: MenuInflater) {\n                    menuInflater.inflate(R.menu.appbar_menu, menu)\n                }\n\n                override fun onMenuItemSelected(menuItem: MenuItem): Boolean {\n                    when (menuItem.itemId) {\n                        R.id.search_item -> findNavController().navigate(\n                            MovieFragmentDirections.actionMovieFragmentToSearchMoviesFragment()\n                        )\n                    }\n                    return true\n                }\n            },\n            viewLifecycleOwner,\n            Lifecycle.State.RESUMED\n        )\n        movieAdapter.addOnPagesUpdatedListener {\n            view.doOnPreDraw { startPostponedEnterTransition() }\n        }\n\n        postponeEnterTransition()\n    }\n\n    private fun saveOrder(order: MovieOrder) {\n        sharedPreferences?.edit {\n            putInt(getString(R.string.saved_order_key), order.ordinal)\n        }\n    }\n\n    private fun restoreOrder(): MovieOrder {\n        val value =\n            sharedPreferences?.getInt(\n                getString(R.string.saved_order_key),\n                MovieOrder.POPULAR.ordinal\n            )\n        return MovieOrder.from(value)\n    }\n\n    private fun onNetworkError() {\n        if (!viewModel.isNetworkErrorShown.value!!) {\n            Toast.makeText(activity, \"Network Error\", Toast.LENGTH_LONG).show()\n            viewModel.onNetworkErrorShown()\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/movies/MovieFragment.kt b/app/src/main/java/com/example/movieplayer/ui/movies/MovieFragment.kt
--- a/app/src/main/java/com/example/movieplayer/ui/movies/MovieFragment.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/MovieFragment.kt	(date 1662558679691)
@@ -1,18 +1,11 @@
 package com.example.movieplayer.ui.movies
 
-import android.content.Context
-import android.content.SharedPreferences
 import android.os.Bundle
-import android.view.Menu
-import android.view.MenuInflater
-import android.view.MenuItem
 import android.view.View
-import android.widget.Toast
-import androidx.core.content.edit
-import androidx.core.view.MenuProvider
 import androidx.core.view.doOnPreDraw
+import androidx.core.view.isVisible
 import androidx.fragment.app.Fragment
-import androidx.fragment.app.viewModels
+import androidx.hilt.navigation.fragment.hiltNavGraphViewModels
 import androidx.lifecycle.Lifecycle
 import androidx.lifecycle.lifecycleScope
 import androidx.navigation.fragment.FragmentNavigatorExtras
@@ -20,119 +13,130 @@
 import androidx.recyclerview.widget.GridLayoutManager
 import com.example.movieplayer.R
 import com.example.movieplayer.databinding.MovieListBinding
+import com.example.movieplayer.feature.fetchmovies.data.Movie
 import com.example.movieplayer.feature.fetchmovies.domain.MovieOrder
+import com.example.movieplayer.ui.common.Preferences
+import com.example.movieplayer.ui.common.getErrorState
 import dagger.hilt.android.AndroidEntryPoint
 import kotlinx.coroutines.flow.collectLatest
 import kotlinx.coroutines.launch
+import javax.inject.Inject
 
 @AndroidEntryPoint
 class MovieFragment : Fragment(R.layout.movie_list) {
 
-    private val viewModel: MovieViewModel by viewModels()
+    @Inject
+    lateinit var preferences: Preferences
 
-    private val sharedPreferences: SharedPreferences? by lazy {
-        activity?.getPreferences(Context.MODE_PRIVATE)
-    }
+    private val viewModel: MovieViewModel by hiltNavGraphViewModels(R.id.moviesGraph)
 
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
 
         val binding: MovieListBinding = MovieListBinding.bind(requireView())
-
         binding.lifecycleOwner = viewLifecycleOwner
         binding.viewModel = viewModel
 
-        binding.movieRecyclerView.layoutManager = GridLayoutManager(context, 2)
+        postponeEnterTransition()
 
         val movieAdapter = MovieAdapter { itemView, movie ->
-            val extras = FragmentNavigatorExtras(
-                itemView to getString(R.string.movie_card_detail_transition_name)
-            )
-            findNavController().navigate(
-                MovieFragmentDirections.actionMovieFragmentToMovieDetailsFragment(
-                    movie
-                ),
-                extras
-            )
+            navigateToMovieDetails(itemView, movie)
         }
+
+        binding.movieRecyclerView.layoutManager = GridLayoutManager(context, 2)
         binding.movieRecyclerView.adapter = movieAdapter
 
-        viewLifecycleOwner.lifecycleScope.launch {
-            viewModel.movies.collectLatest { pagingData ->
-                movieAdapter.submitData(pagingData)
+        movieAdapter.addLoadStateListener { states ->
+            if (states.getErrorState() != null) {
+                finishTransition(view)
             }
         }
-
-        viewModel.eventNetworkError.observe(viewLifecycleOwner) { isNetworkError ->
-            if (isNetworkError) onNetworkError()
+        movieAdapter.addOnPagesUpdatedListener {
+            finishTransition(view)
         }
 
         val savedOrder = restoreOrder()
-        val selectedChipId = when (savedOrder) {
-            MovieOrder.TOP_RATED -> R.id.topRated
-            MovieOrder.UPCOMING -> R.id.upcoming
-            MovieOrder.NOW_PLAYING -> R.id.nowPlaying
-            else -> R.id.popular
-        }
+        val selectedChipId = getSelectedChipId(savedOrder)
         binding.chipGroup.check(selectedChipId)
         viewModel.onOrderChanged(savedOrder)
 
-        binding.chipGroup.setOnCheckedChangeListener { _, checkedId ->
-            val order = when (checkedId) {
-                R.id.topRated -> MovieOrder.TOP_RATED
-                R.id.upcoming -> MovieOrder.UPCOMING
-                R.id.nowPlaying -> MovieOrder.NOW_PLAYING
-                else -> MovieOrder.POPULAR
-            }
+        binding.chipGroup.setOnCheckedStateChangeListener { _, checkedIds ->
+            onOrderChanged(checkedIds)
+        }
+
+        binding.retryButton.setOnClickListener {
+            movieAdapter.retry()
+        }
+
+        addMenuProvider()
+
+        viewLifecycleOwner.lifecycleScope.launch {
+            viewModel.movies.collectLatest { pagingData ->
+                movieAdapter.submitData(pagingData)
+            }
+        }
+
+        viewLifecycleOwner.lifecycleScope.launch {
+            movieAdapter.loadStateFlow.collectLatest { loadStates ->
+                binding.errorView.isVisible = loadStates.getErrorState() != null
+            }
+        }
+    }
+
+    private fun addMenuProvider() {
+        activity?.addMenuProvider(
+            MovieMenuProvider {
+                findNavController().navigate(
+                    MovieFragmentDirections.actionMovieFragmentToSearchMoviesFragment()
+                )
+            },
+            viewLifecycleOwner,
+            Lifecycle.State.STARTED
+        )
+    }
+
+    private fun onOrderChanged(checkedIds: List<Int>) {
+        val order = when (checkedIds.first()) {
+            R.id.topRated -> MovieOrder.TOP_RATED
+            R.id.upcoming -> MovieOrder.UPCOMING
+            R.id.nowPlaying -> MovieOrder.NOW_PLAYING
+            else -> MovieOrder.POPULAR
+        }
 
-            viewModel.onOrderChanged(order)
-            saveOrder(order)
-        }
+        viewModel.onOrderChanged(order)
+        saveOrder(order)
+    }
 
-        activity?.addMenuProvider(
-            object : MenuProvider {
-                override fun onCreateMenu(menu: Menu, menuInflater: MenuInflater) {
-                    menuInflater.inflate(R.menu.appbar_menu, menu)
-                }
+    private fun getSelectedChipId(savedOrder: MovieOrder) =
+        when (savedOrder) {
+            MovieOrder.TOP_RATED -> R.id.topRated
+            MovieOrder.UPCOMING -> R.id.upcoming
+            MovieOrder.NOW_PLAYING -> R.id.nowPlaying
+            else -> R.id.popular
+        }
 
-                override fun onMenuItemSelected(menuItem: MenuItem): Boolean {
-                    when (menuItem.itemId) {
-                        R.id.search_item -> findNavController().navigate(
-                            MovieFragmentDirections.actionMovieFragmentToSearchMoviesFragment()
-                        )
-                    }
-                    return true
-                }
-            },
-            viewLifecycleOwner,
-            Lifecycle.State.RESUMED
-        )
-        movieAdapter.addOnPagesUpdatedListener {
-            view.doOnPreDraw { startPostponedEnterTransition() }
-        }
+    private fun finishTransition(view: View) {
+        view.doOnPreDraw { startPostponedEnterTransition() }
+    }
 
-        postponeEnterTransition()
+    private fun navigateToMovieDetails(
+        itemView: View,
+        movie: Movie
+    ) {
+        val extras = FragmentNavigatorExtras(
+            itemView to getString(R.string.movie_card_detail_transition_name)
+        )
+        findNavController().navigate(
+            MovieFragmentDirections.actionMovieFragmentToMovieDetailsFragment(
+                movie
+            ),
+            extras
+        )
     }
 
     private fun saveOrder(order: MovieOrder) {
-        sharedPreferences?.edit {
-            putInt(getString(R.string.saved_order_key), order.ordinal)
-        }
+        preferences.movieOrder = order.ordinal
     }
 
-    private fun restoreOrder(): MovieOrder {
-        val value =
-            sharedPreferences?.getInt(
-                getString(R.string.saved_order_key),
-                MovieOrder.POPULAR.ordinal
-            )
-        return MovieOrder.from(value)
-    }
-
-    private fun onNetworkError() {
-        if (!viewModel.isNetworkErrorShown.value!!) {
-            Toast.makeText(activity, "Network Error", Toast.LENGTH_LONG).show()
-            viewModel.onNetworkErrorShown()
-        }
-    }
+    private fun restoreOrder(): MovieOrder = MovieOrder.from(preferences.movieOrder)
 }
Index: app/src/main/java/com/example/movieplayer/ui/movies/MovieViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.ui.movies\n\nimport androidx.lifecycle.LiveData\nimport androidx.lifecycle.MutableLiveData\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport androidx.paging.Pager\nimport androidx.paging.PagingConfig\nimport androidx.paging.PagingData\nimport androidx.paging.cachedIn\nimport com.example.movieplayer.feature.fetchmovies.data.Movie\nimport com.example.movieplayer.feature.fetchmovies.data.MoviesPagingSource\nimport com.example.movieplayer.feature.fetchmovies.domain.FetchMoviesUseCase\nimport com.example.movieplayer.feature.fetchmovies.domain.MovieOrder\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.ExperimentalCoroutinesApi\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.flow.flatMapLatest\nimport javax.inject.Inject\n\n@HiltViewModel\nclass MovieViewModel @Inject constructor(\n    private val fetchMoviesUseCase: FetchMoviesUseCase\n) : ViewModel() {\n\n    private val _eventNetworkError = MutableLiveData<Boolean>(false)\n    private val _isNetworkErrorShown = MutableLiveData<Boolean>(false)\n    private val _order: MutableStateFlow<MovieOrder> = MutableStateFlow(MovieOrder.POPULAR)\n    private val order = _order.asStateFlow()\n\n    val eventNetworkError: LiveData<Boolean>\n        get() = _eventNetworkError\n\n    val isNetworkErrorShown: LiveData<Boolean>\n        get() = _isNetworkErrorShown\n\n    @OptIn(ExperimentalCoroutinesApi::class)\n    val movies: Flow<PagingData<Movie>> = order.flatMapLatest { order ->\n        Pager(\n            PagingConfig(pageSize = 20)\n        ) {\n            MoviesPagingSource(fetchMoviesUseCase, order)\n        }\n            .flow\n            .cachedIn(viewModelScope)\n    }\n\n    fun onNetworkErrorShown() {\n        _isNetworkErrorShown.value = true\n    }\n\n    fun onOrderChanged(order: MovieOrder) {\n        _order.value = order\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/movies/MovieViewModel.kt b/app/src/main/java/com/example/movieplayer/ui/movies/MovieViewModel.kt
--- a/app/src/main/java/com/example/movieplayer/ui/movies/MovieViewModel.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/MovieViewModel.kt	(date 1662409093568)
@@ -1,7 +1,5 @@
 package com.example.movieplayer.ui.movies
 
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.MutableLiveData
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
 import androidx.paging.Pager
@@ -9,7 +7,6 @@
 import androidx.paging.PagingData
 import androidx.paging.cachedIn
 import com.example.movieplayer.feature.fetchmovies.data.Movie
-import com.example.movieplayer.feature.fetchmovies.data.MoviesPagingSource
 import com.example.movieplayer.feature.fetchmovies.domain.FetchMoviesUseCase
 import com.example.movieplayer.feature.fetchmovies.domain.MovieOrder
 import dagger.hilt.android.lifecycle.HiltViewModel
@@ -25,31 +22,17 @@
     private val fetchMoviesUseCase: FetchMoviesUseCase
 ) : ViewModel() {
 
-    private val _eventNetworkError = MutableLiveData<Boolean>(false)
-    private val _isNetworkErrorShown = MutableLiveData<Boolean>(false)
     private val _order: MutableStateFlow<MovieOrder> = MutableStateFlow(MovieOrder.POPULAR)
     private val order = _order.asStateFlow()
 
-    val eventNetworkError: LiveData<Boolean>
-        get() = _eventNetworkError
-
-    val isNetworkErrorShown: LiveData<Boolean>
-        get() = _isNetworkErrorShown
-
     @OptIn(ExperimentalCoroutinesApi::class)
     val movies: Flow<PagingData<Movie>> = order.flatMapLatest { order ->
         Pager(
             PagingConfig(pageSize = 20)
         ) {
             MoviesPagingSource(fetchMoviesUseCase, order)
-        }
-            .flow
-            .cachedIn(viewModelScope)
-    }
-
-    fun onNetworkErrorShown() {
-        _isNetworkErrorShown.value = true
-    }
+        }.flow
+    }.cachedIn(viewModelScope)
 
     fun onOrderChanged(order: MovieOrder) {
         _order.value = order
Index: app/src/main/java/com/example/movieplayer/ui/people/PeopleFragment.kt
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/people/PeopleFragment.kt b/app/src/main/java/com/example/movieplayer/ui/people/PeopleFragment.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/movieplayer/ui/people/PeopleFragment.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ /dev/null	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
@@ -1,44 +0,0 @@
-package com.example.movieplayer.ui.people
-
-import android.os.Bundle
-import android.view.*
-import androidx.databinding.DataBindingUtil
-import androidx.fragment.app.Fragment
-import androidx.navigation.fragment.findNavController
-import com.example.movieplayer.R
-import com.example.movieplayer.databinding.PeopleListBinding
-import dagger.hilt.android.AndroidEntryPoint
-
-@AndroidEntryPoint
-class PeopleFragment : Fragment() {
-
-    override fun onCreateView(
-        inflater: LayoutInflater,
-        container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-        val binding: PeopleListBinding = DataBindingUtil.inflate(
-            inflater,
-            R.layout.people_list,
-            container,
-            false
-        )
-        setHasOptionsMenu(true)
-
-        return binding.root
-    }
-
-    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {
-        super.onCreateOptionsMenu(menu, inflater)
-
-        inflater.inflate(R.menu.appbar_menu, menu)
-    }
-
-    override fun onOptionsItemSelected(item: MenuItem): Boolean {
-        when(item.itemId){
-            R.id.search_item -> findNavController().navigate(
-                PeopleFragmentDirections.actionPeopleFragmentToSearchPeopleFragment())
-        }
-        return super.onOptionsItemSelected(item)
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/movieplayer/common/Paging.kt
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/common/Paging.kt b/app/src/main/java/com/example/movieplayer/common/Paging.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/movieplayer/common/Paging.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ /dev/null	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
@@ -1,8 +0,0 @@
-package com.example.movieplayer.common
-
-fun <T> ApiResponse<T>.getNextPageKey(): Int? = when {
-    page == null || page == 0 -> null
-    totalPages == null || totalPages == 0 -> null
-    page + 1 <= totalPages -> page + 1
-    else -> null
-}
Index: app/src/main/res/layout/movie_detail.xml
===================================================================
diff --git a/app/src/main/res/layout/movie_detail.xml b/app/src/main/res/layout/movie_detail.xml
deleted file mode 100644
--- a/app/src/main/res/layout/movie_detail.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ /dev/null	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
@@ -1,127 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <data>
-
-        <variable
-            name="viewModel"
-            type="com.example.movieplayer.ui.detail.MovieDetailsViewModel" />
-
-    </data>
-
-    <com.google.android.material.card.MaterialCardView
-        android:id="@+id/cardView"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_margin="8dp"
-        app:cardCornerRadius="36dp"
-        app:cardElevation="24dp">
-
-        <androidx.constraintlayout.motion.widget.MotionLayout
-            android:id="@+id/motionLayout"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            app:layoutDescription="@xml/movie_detail_scene">
-
-            <ImageView
-                android:id="@+id/imageView"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                app:imageUrl="@{viewModel.selectedMovie.posterPath}"
-                app:layout_constrainedHeight="true"
-                app:layout_constraintBottom_toBottomOf="parent"
-                app:layout_constraintTop_toTopOf="parent"
-                app:layout_constraintVertical_bias="0"
-                tools:srcCompat="@drawable/poster" />
-
-            <com.google.android.material.card.MaterialCardView
-                android:id="@+id/contentCardView"
-                android:layout_width="match_parent"
-                android:layout_height="160dp"
-                app:cardCornerRadius="36dp"
-                app:layout_constraintBottom_toBottomOf="parent"
-                app:layout_constraintEnd_toEndOf="parent"
-                app:layout_constraintStart_toStartOf="parent">
-
-                <androidx.core.widget.NestedScrollView
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent">
-
-                    <androidx.constraintlayout.widget.ConstraintLayout
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:padding="16dp">
-
-                        <TextView
-                            android:id="@+id/title"
-                            android:layout_width="match_parent"
-                            android:layout_height="wrap_content"
-                            android:layout_gravity="center"
-                            android:gravity="start"
-                            android:text="@{viewModel.selectedMovie.title}"
-                            android:textColor="@color/orange"
-                            android:textSize="22sp"
-                            app:layout_constraintBottom_toTopOf="@id/releaseData"
-                            tools:text="Title" />
-
-                        <TextView
-                            android:id="@+id/releaseData"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:paddingBottom="8dp"
-                            android:text="@{viewModel.selectedMovie.releaseDate}"
-                            android:textColor="@color/grey"
-                            app:layout_constraintEnd_toStartOf="@+id/voteAverage"
-                            app:layout_constraintHorizontal_bias="0.5"
-                            app:layout_constraintHorizontal_chainStyle="spread_inside"
-                            app:layout_constraintStart_toStartOf="parent"
-                            app:layout_constraintTop_toBottomOf="@id/title"
-                            tools:text="2000" />
-
-                        <ImageView
-                            android:id="@+id/star"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:paddingEnd="4dp"
-                            app:layout_constraintEnd_toStartOf="@id/voteAverage"
-                            app:layout_constraintTop_toBottomOf="@id/title"
-                            app:srcCompat="@drawable/ic_baseline_stars_24"
-                            app:tint="@color/orange" />
-
-                        <TextView
-                            android:id="@+id/voteAverage"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:paddingBottom="8dp"
-                            android:text="@{viewModel.selectedMovie.votes}"
-                            android:textSize="18sp"
-                            app:layout_constraintEnd_toEndOf="parent"
-                            app:layout_constraintHorizontal_bias="0.5"
-                            app:layout_constraintStart_toEndOf="@+id/releaseData"
-                            app:layout_constraintTop_toBottomOf="@id/title"
-                            tools:text="3.0" />
-
-                        <TextView
-                            android:id="@+id/overview"
-                            android:layout_width="match_parent"
-                            android:layout_height="wrap_content"
-                            android:paddingBottom="8dp"
-                            android:text="@{viewModel.selectedMovie.overview}"
-                            app:layout_constraintTop_toBottomOf="@id/releaseData"
-                            tools:text="About Movie" />
-
-                    </androidx.constraintlayout.widget.ConstraintLayout>
-
-                </androidx.core.widget.NestedScrollView>
-
-            </com.google.android.material.card.MaterialCardView>
-
-        </androidx.constraintlayout.motion.widget.MotionLayout>
-
-    </com.google.android.material.card.MaterialCardView>
-
-
-</layout>
Index: app/src/main/java/com/example/movieplayer/common/BindingAdapter.kt
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/common/BindingAdapter.kt b/app/src/main/java/com/example/movieplayer/common/BindingAdapter.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/movieplayer/common/BindingAdapter.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ /dev/null	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
@@ -1,64 +0,0 @@
-package com.example.movieplayer.common
-
-import android.view.View
-import android.widget.AdapterView
-import android.widget.AutoCompleteTextView
-import android.widget.ImageView
-import androidx.databinding.BindingAdapter
-import androidx.recyclerview.widget.RecyclerView
-import coil.load
-import com.example.movieplayer.R
-import com.example.movieplayer.feature.fetchcredits.data.Cast
-import com.example.movieplayer.feature.fetchcredits.data.Crew
-import com.example.movieplayer.feature.fetchtvseriesdetails.data.Season
-import com.example.movieplayer.ui.details.movie.CastAdapter
-import com.example.movieplayer.ui.details.movie.CrewAdapter
-import com.example.movieplayer.ui.details.tvseries.SeasonArrayAdapter
-
-@BindingAdapter("imageUrl")
-fun setImageUrl(imageView: ImageView, url: String?) {
-    val baseUrl = "https://image.tmdb.org/t/p/w500"
-    val imageUri = "$baseUrl$url"
-    imageView.load(imageUri) {
-        crossfade(true)
-        placeholder(R.drawable.placeholder_image)
-        error(R.drawable.error_image)
-    }
-}
-
-@BindingAdapter("listCrewData")
-fun bindCrewRecyclerView(recyclerView: RecyclerView, data: List<Crew>?) {
-    val adapter = recyclerView.adapter as CrewAdapter
-    adapter.submitList(data)
-}
-
-@BindingAdapter("listCastData")
-fun bindCastRecyclerView(recyclerView: RecyclerView, data: List<Cast>?) {
-    val adapter = recyclerView.adapter as CastAdapter
-    adapter.submitList(data)
-}
-
-@BindingAdapter("android:visibility")
-fun setVisibility(view: View, value: Boolean) {
-    view.visibility = if (value) View.VISIBLE else View.GONE
-}
-
-@BindingAdapter("seasons")
-fun bindSeasonAutoCompleteTextView(
-    autoCompleteTextView: AutoCompleteTextView,
-    data: List<Season>?
-) {
-    val context = autoCompleteTextView.context
-    val adapter = SeasonArrayAdapter(context, data ?: emptyList())
-    autoCompleteTextView.setAdapter(adapter)
-}
-
-@BindingAdapter("android:text", "filter")
-fun AutoCompleteTextView.updateFilter(text: String?, filter: Boolean) {
-    this.setText(text, filter)
-}
-
-@BindingAdapter("onItemClicked")
-fun setOnItemClickListener(view: AutoCompleteTextView, listener: AdapterView.OnItemClickListener) {
-    view.onItemClickListener = listener
-}
Index: app/src/main/java/com/example/movieplayer/ui/search/people/SearchPeopleFragment.kt
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/search/people/SearchPeopleFragment.kt b/app/src/main/java/com/example/movieplayer/ui/search/people/SearchPeopleFragment.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/movieplayer/ui/search/people/SearchPeopleFragment.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ /dev/null	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
@@ -1,29 +0,0 @@
-package com.example.movieplayer.ui.search.people
-
-import android.os.Bundle
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.databinding.DataBindingUtil
-import androidx.fragment.app.Fragment
-import com.example.movieplayer.R
-import com.example.movieplayer.databinding.SearchListBinding
-
-class SearchPeopleFragment : Fragment() {
-
-    override fun onCreateView(
-        inflater: LayoutInflater,
-        container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-        val binding: SearchListBinding = DataBindingUtil.inflate(
-            inflater,
-            R.layout.search_list,
-            container,
-            false
-        )
-
-        return binding.root
-    }
-
-}
\ No newline at end of file
Index: app/src/main/res/xml/movie_detail_scene.xml
===================================================================
diff --git a/app/src/main/res/xml/movie_detail_scene.xml b/app/src/main/res/xml/movie_detail_scene.xml
deleted file mode 100644
--- a/app/src/main/res/xml/movie_detail_scene.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ /dev/null	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
@@ -1,73 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<MotionScene xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-
-    <Transition
-        app:constraintSetEnd="@id/end"
-        app:constraintSetStart="@+id/start"
-        app:duration="1000">
-
-        <OnSwipe
-            app:dragDirection="dragUp"
-            app:touchAnchorId="@+id/contentCardView"
-            app:touchAnchorSide="top" />
-
-    </Transition>
-
-    <ConstraintSet android:id="@+id/start">
-
-        <Constraint android:id="@+id/imageView">
-
-            <Layout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                app:layout_constrainedHeight="true"
-                app:layout_constraintBottom_toBottomOf="parent"
-                app:layout_constraintTop_toTopOf="parent"
-                app:layout_constraintVertical_bias="0"/>
-
-        </Constraint>
-
-        <Constraint android:id="@id/contentCardView">
-
-            <Layout
-                android:layout_width="match_parent"
-                android:layout_height="160dp"
-                app:cardCornerRadius="36dp"
-                app:layout_constraintBottom_toBottomOf="parent"
-                app:layout_constraintEnd_toEndOf="parent"
-                app:layout_constraintStart_toStartOf="parent" />
-
-        </Constraint>
-
-    </ConstraintSet>
-
-    <ConstraintSet android:id="@+id/end">
-
-        <Constraint android:id="@+id/imageView">
-
-            <Layout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                app:layout_constrainedHeight="true"
-                app:layout_constraintBottom_toBottomOf="parent"
-                app:layout_constraintTop_toTopOf="parent"
-                app:layout_constraintVertical_bias="0"/>
-
-        </Constraint>
-
-        <Constraint android:id="@id/contentCardView">
-
-            <Layout
-                android:layout_width="match_parent"
-                android:layout_height="360dp"
-                app:cardCornerRadius="36dp"
-                app:layout_constraintBottom_toBottomOf="parent"
-                app:layout_constraintEnd_toEndOf="parent"
-                app:layout_constraintStart_toStartOf="parent" />
-
-        </Constraint>
-
-    </ConstraintSet>
-
-</MotionScene>
Index: app/src/main/res/layout/people_list.xml
===================================================================
diff --git a/app/src/main/res/layout/people_list.xml b/app/src/main/res/layout/people_list.xml
deleted file mode 100644
--- a/app/src/main/res/layout/people_list.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ /dev/null	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <data>
-
-
-    </data>
-
-    <androidx.constraintlayout.widget.ConstraintLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-
-    </androidx.constraintlayout.widget.ConstraintLayout>
-
-</layout>
\ No newline at end of file
Index: app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/MovieOrder.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchmovies.domain\n\nenum class MovieOrder {\n    POPULAR,\n    UPCOMING,\n    TOP_RATED,\n    NOW_PLAYING;\n\n    companion object {\n        fun from(value: Int?): MovieOrder {\n            if(value == null) {\n                return POPULAR\n            }\n\n            return values().find { it.ordinal == value } ?: POPULAR\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/MovieOrder.kt b/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/MovieOrder.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/MovieOrder.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/MovieOrder.kt	(date 1662559021117)
@@ -7,12 +7,12 @@
     NOW_PLAYING;
 
     companion object {
-        fun from(value: Int?): MovieOrder {
-            if(value == null) {
+        fun from(value: Int): MovieOrder {
+            if (value == -1) {
                 return POPULAR
             }
 
             return values().find { it.ordinal == value } ?: POPULAR
         }
     }
-}
\ No newline at end of file
+}
Index: app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/TVOrder.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchtvseries.domain\n\nenum class TVOrder {\n    POPULAR,\n    TOP_RATED,\n    AIRING_TODAY,\n    ON_THE_AIR,;\n\n    companion object {\n        fun from(value: Int?): TVOrder {\n            if(value == null) {\n                return POPULAR\n            }\n\n            return values().find { it.ordinal == value } ?: POPULAR\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/TVOrder.kt b/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/TVOrder.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/TVOrder.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/TVOrder.kt	(date 1662559001693)
@@ -4,15 +4,15 @@
     POPULAR,
     TOP_RATED,
     AIRING_TODAY,
-    ON_THE_AIR,;
+    ON_THE_AIR;
 
     companion object {
-        fun from(value: Int?): TVOrder {
-            if(value == null) {
+        fun from(value: Int): TVOrder {
+            if (value == -1) {
                 return POPULAR
             }
 
             return values().find { it.ordinal == value } ?: POPULAR
         }
     }
-}
\ No newline at end of file
+}
Index: app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/MovieApiService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchmovies.data\n\nimport com.example.movieplayer.common.ApiResponse\nimport retrofit2.http.GET\nimport retrofit2.http.Query\n\ninterface MovieApiService {\n    @GET(\"movie/popular\")\n    suspend fun getPopularMovies(@Query(\"api_key\") key: String,  @Query(\"page\") page:Int): ApiResponse<Movie>\n\n    @GET(\"movie/top_rated\")\n    suspend fun getTopRatedMovies(@Query(\"api_key\") key: String,  @Query(\"page\") page:Int): ApiResponse<Movie>\n\n    @GET(\"movie/upcoming\")\n    suspend fun getUpcomingMovies(@Query(\"api_key\") key: String,  @Query(\"page\") page:Int): ApiResponse<Movie>\n\n    @GET(\"movie/now_playing\")\n    suspend fun getNowPlayingMovies(@Query(\"api_key\") key: String,  @Query(\"page\") page:Int): ApiResponse<Movie>\n\n    @GET(\"search/movie\")\n    suspend fun getSearchedMovies(\n        @Query(\"api_key\") key: String,\n        @Query(\"query\") query: String,\n        @Query(\"page\") page: Int\n    ): ApiResponse<Movie>\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/MovieApiService.kt b/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/MovieApiService.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/MovieApiService.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/MovieApiService.kt	(date 1661348892258)
@@ -6,16 +6,28 @@
 
 interface MovieApiService {
     @GET("movie/popular")
-    suspend fun getPopularMovies(@Query("api_key") key: String,  @Query("page") page:Int): ApiResponse<Movie>
+    suspend fun getPopularMovies(
+        @Query("api_key") key: String,
+        @Query("page") page: Int
+    ): ApiResponse<Movie>
 
     @GET("movie/top_rated")
-    suspend fun getTopRatedMovies(@Query("api_key") key: String,  @Query("page") page:Int): ApiResponse<Movie>
+    suspend fun getTopRatedMovies(
+        @Query("api_key") key: String,
+        @Query("page") page: Int
+    ): ApiResponse<Movie>
 
     @GET("movie/upcoming")
-    suspend fun getUpcomingMovies(@Query("api_key") key: String,  @Query("page") page:Int): ApiResponse<Movie>
+    suspend fun getUpcomingMovies(
+        @Query("api_key") key: String,
+        @Query("page") page: Int
+    ): ApiResponse<Movie>
 
     @GET("movie/now_playing")
-    suspend fun getNowPlayingMovies(@Query("api_key") key: String,  @Query("page") page:Int): ApiResponse<Movie>
+    suspend fun getNowPlayingMovies(
+        @Query("api_key") key: String,
+        @Query("page") page: Int
+    ): ApiResponse<Movie>
 
     @GET("search/movie")
     suspend fun getSearchedMovies(
@@ -23,4 +35,4 @@
         @Query("query") query: String,
         @Query("page") page: Int
     ): ApiResponse<Movie>
-}
\ No newline at end of file
+}
Index: app/src/main/java/com/example/movieplayer/ui/search/movies/SearchMoviesViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/search/movies/SearchMoviesViewModel.kt b/app/src/main/java/com/example/movieplayer/ui/movies/search/SearchMoviesViewModel.kt
rename from app/src/main/java/com/example/movieplayer/ui/search/movies/SearchMoviesViewModel.kt
rename to app/src/main/java/com/example/movieplayer/ui/movies/search/SearchMoviesViewModel.kt
--- a/app/src/main/java/com/example/movieplayer/ui/search/movies/SearchMoviesViewModel.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/search/SearchMoviesViewModel.kt	(date 1662579526999)
@@ -1,5 +1,6 @@
-package com.example.movieplayer.ui.search.movies
+package com.example.movieplayer.ui.movies.search
 
+import androidx.lifecycle.SavedStateHandle
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
 import androidx.paging.Pager
@@ -7,36 +8,29 @@
 import androidx.paging.PagingData
 import androidx.paging.cachedIn
 import com.example.movieplayer.feature.fetchmovies.data.Movie
-import com.example.movieplayer.feature.fetchmovies.data.SearchMoviesPagingSource
 import com.example.movieplayer.feature.fetchmovies.domain.SearchMoviesUseCase
 import dagger.hilt.android.lifecycle.HiltViewModel
 import kotlinx.coroutines.ExperimentalCoroutinesApi
 import kotlinx.coroutines.flow.Flow
-import kotlinx.coroutines.flow.MutableStateFlow
 import kotlinx.coroutines.flow.debounce
-import kotlinx.coroutines.flow.filter
 import kotlinx.coroutines.flow.flatMapLatest
 import javax.inject.Inject
 
 @HiltViewModel
 class SearchMoviesViewModel @Inject constructor(
-    private val searchMoviesUseCase: SearchMoviesUseCase
+    private val searchMoviesUseCase: SearchMoviesUseCase,
+    private val savedStateHandle: SavedStateHandle
 ) : ViewModel() {
 
-    private val queryFlow = MutableStateFlow("")
+    private val queryFlow = savedStateHandle.getStateFlow("query", "")
 
     @OptIn(ExperimentalCoroutinesApi::class)
     val querySearchResults = queryFlow
-        .filter { query -> query.length > 3 }
         .debounce(300)
         .flatMapLatest { query ->
             getSearchResultStream(query)
         }.cachedIn(viewModelScope)
 
-    fun onQueryChanged(query: String) {
-        queryFlow.value = query
-    }
-
     private fun getSearchResultStream(
         query: String
     ): Flow<PagingData<Movie>> {
@@ -44,7 +38,10 @@
             PagingConfig(pageSize = 20)
         ) {
             SearchMoviesPagingSource(searchMoviesUseCase, query)
-        }
-            .flow
+        }.flow
+    }
+
+    fun onQueryChanged(query: String) {
+        savedStateHandle["query"] = query
     }
 }
Index: app/src/main/java/com/example/movieplayer/feature/fetchcredits/data/Credits.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchcredits.data\n\nimport com.squareup.moshi.Json\nimport com.squareup.moshi.JsonClass\n\n@JsonClass(generateAdapter = true)\ndata class Credits(\n    val id: Int,\n    val cast: List<Cast>,\n    val crew: List<Crew>\n)\n\n@JsonClass(generateAdapter = true)\ndata class Cast(\n    val id: Int,\n    val name: String,\n    val popularity: Double,\n    @Json(name = \"profile_path\")\n    val path: String?,\n    val character: String\n)\n\n@JsonClass(generateAdapter = true)\ndata class Crew(\n    val id: Int,\n    @Json(name = \"known_for_department\")\n    val department: String,\n    val name: String,\n    val popularity: Double,\n    @Json(name = \"profile_path\")\n    val path: String?,\n    val job: String\n)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchcredits/data/Credits.kt b/app/src/main/java/com/example/movieplayer/feature/fetchcredits/data/Credits.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchcredits/data/Credits.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchcredits/data/Credits.kt	(date 1661800044473)
@@ -15,19 +15,22 @@
     val id: Int,
     val name: String,
     val popularity: Double,
+    val character: String,
+
     @Json(name = "profile_path")
-    val path: String?,
-    val character: String
+    val path: String?
 )
 
 @JsonClass(generateAdapter = true)
 data class Crew(
     val id: Int,
-    @Json(name = "known_for_department")
-    val department: String,
     val name: String,
     val popularity: Double,
+    val job: String,
+
+    @Json(name = "known_for_department")
+    val department: String,
+
     @Json(name = "profile_path")
-    val path: String?,
-    val job: String
+    val path: String?
 )
Index: app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/MoviesPagingSource.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/MoviesPagingSource.kt b/app/src/main/java/com/example/movieplayer/ui/movies/MoviesPagingSource.kt
rename from app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/MoviesPagingSource.kt
rename to app/src/main/java/com/example/movieplayer/ui/movies/MoviesPagingSource.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/MoviesPagingSource.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/MoviesPagingSource.kt	(date 1662492548405)
@@ -1,17 +1,19 @@
-package com.example.movieplayer.feature.fetchmovies.data
+package com.example.movieplayer.ui.movies
 
 import android.util.Log
 import androidx.paging.PagingSource
 import androidx.paging.PagingState
 import com.example.movieplayer.common.Result
-import com.example.movieplayer.common.getNextPageKey
+import com.example.movieplayer.feature.fetchmovies.data.Movie
 import com.example.movieplayer.feature.fetchmovies.domain.FetchMoviesUseCase
 import com.example.movieplayer.feature.fetchmovies.domain.MovieOrder
+import com.example.movieplayer.ui.common.getNextPageKey
 
-class MoviesPagingSource (
+class MoviesPagingSource(
     val fetchMoviesUseCase: FetchMoviesUseCase,
     private val movieOrder: MovieOrder
 ) : PagingSource<Int, Movie>() {
+
     override suspend fun load(params: LoadParams<Int>): LoadResult<Int, Movie> {
         val nextPageNumber = params.key ?: 1
         val response = fetchMoviesUseCase(movieOrder, nextPageNumber)
@@ -29,11 +31,8 @@
             }
         }
     }
+
     override fun getRefreshKey(state: PagingState<Int, Movie>): Int? {
-        return state.anchorPosition?.let { anchorPosition ->
-            val anchorPage = state.closestPageToPosition(anchorPosition)
-            anchorPage?.prevKey?.plus(1) ?: anchorPage?.nextKey?.minus(1)
-
-        }
-    }
-}
\ No newline at end of file
+        return getMovieRefreshKey(state)
+    }
+}
Index: app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/TVSeries.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchtvseries.data\n\nimport android.os.Parcelable\nimport com.squareup.moshi.Json\nimport com.squareup.moshi.JsonClass\nimport kotlinx.android.parcel.Parcelize\n\n@Parcelize\n@JsonClass(generateAdapter = true)\ndata class TVSeries(\n\n    val popularity: Double,\n\n    val id: Int,\n\n    val overview: String,\n\n    val name: String,\n\n    @Json(name = \"first_air_date\")\n    val firstAirDate: String?,\n\n    @Json(name = \"original_name\")\n    val originalName: String,\n\n    @Json(name = \"vote_average\")\n    val voteAverage: Double,\n\n    @Json(name = \"poster_path\")\n    val posterPath: String?\n) : Parcelable {\n    fun votes() = voteAverage.toString()\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/TVSeries.kt b/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/TVSeries.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/TVSeries.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/TVSeries.kt	(date 1662465953456)
@@ -3,18 +3,14 @@
 import android.os.Parcelable
 import com.squareup.moshi.Json
 import com.squareup.moshi.JsonClass
-import kotlinx.android.parcel.Parcelize
+import kotlinx.parcelize.Parcelize
 
 @Parcelize
 @JsonClass(generateAdapter = true)
 data class TVSeries(
-
     val popularity: Double,
-
     val id: Int,
-
     val overview: String,
-
     val name: String,
 
     @Json(name = "first_air_date")
@@ -29,5 +25,7 @@
     @Json(name = "poster_path")
     val posterPath: String?
 ) : Parcelable {
-    fun votes() = voteAverage.toString()
+
+    val votes: String
+        get() = voteAverage.toString()
 }
Index: app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/Movie.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchmovies.data\n\nimport android.os.Parcelable\nimport com.squareup.moshi.Json\nimport com.squareup.moshi.JsonClass\nimport kotlinx.android.parcel.Parcelize\n\n@Parcelize\n@JsonClass(generateAdapter = true)\ndata class Movie(\n        val id: Int,\n\n        val title: String,\n\n        val overview: String,\n\n        val popularity: Double,\n\n        val adult: Boolean,\n\n        @Json(name = \"vote_count\")\n        val voteCount: Int,\n\n        @Json(name = \"vote_average\")\n        val voteAverage: Double,\n\n        @Json(name = \"original_language\")\n        val language: String,\n\n        @Json(name = \"poster_path\")\n        val posterPath: String?,\n\n        @Json(name = \"original_title\")\n        val originalTitle: String,\n\n        @Json(name = \"release_date\")\n        val releaseDate: String\n): Parcelable {\n    fun votes() = voteAverage.toString()\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/Movie.kt b/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/Movie.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/Movie.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/Movie.kt	(date 1662465953464)
@@ -3,40 +3,36 @@
 import android.os.Parcelable
 import com.squareup.moshi.Json
 import com.squareup.moshi.JsonClass
-import kotlinx.android.parcel.Parcelize
+import kotlinx.parcelize.Parcelize
 
 @Parcelize
 @JsonClass(generateAdapter = true)
 data class Movie(
-        val id: Int,
-
-        val title: String,
-
-        val overview: String,
-
-        val popularity: Double,
-
-        val adult: Boolean,
+    val id: Int,
+    val title: String,
+    val overview: String,
+    val popularity: Double,
+    val adult: Boolean,
 
-        @Json(name = "vote_count")
-        val voteCount: Int,
+    @Json(name = "vote_count")
+    val voteCount: Int,
 
-        @Json(name = "vote_average")
-        val voteAverage: Double,
+    @Json(name = "vote_average")
+    val voteAverage: Double,
 
-        @Json(name = "original_language")
-        val language: String,
+    @Json(name = "original_language")
+    val language: String,
 
-        @Json(name = "poster_path")
-        val posterPath: String?,
+    @Json(name = "poster_path")
+    val posterPath: String?,
 
-        @Json(name = "original_title")
-        val originalTitle: String,
+    @Json(name = "original_title")
+    val originalTitle: String,
 
-        @Json(name = "release_date")
-        val releaseDate: String
-): Parcelable {
-    fun votes() = voteAverage.toString()
-}
+    @Json(name = "release_date")
+    val releaseDate: String
+) : Parcelable {
 
-
+    val votes: String
+        get() = voteAverage.toString()
+}
Index: app/src/main/java/com/example/movieplayer/MovieApplication.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer\n\nimport android.app.Application\nimport dagger.hilt.android.HiltAndroidApp\n\n@HiltAndroidApp\nclass MovieApplication: Application()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/MovieApplication.kt b/app/src/main/java/com/example/movieplayer/MovieApplication.kt
--- a/app/src/main/java/com/example/movieplayer/MovieApplication.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/MovieApplication.kt	(date 1662465554039)
@@ -4,4 +4,4 @@
 import dagger.hilt.android.HiltAndroidApp
 
 @HiltAndroidApp
-class MovieApplication: Application()
\ No newline at end of file
+class MovieApplication : Application()
Index: app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.ui.tvseries\n\nimport androidx.lifecycle.LiveData\nimport androidx.lifecycle.MutableLiveData\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport androidx.paging.Pager\nimport androidx.paging.PagingConfig\nimport androidx.paging.PagingData\nimport androidx.paging.cachedIn\nimport com.example.movieplayer.feature.fetchtvseries.data.TVSeries\nimport com.example.movieplayer.feature.fetchtvseries.data.TVSeriesPagingSource\nimport com.example.movieplayer.feature.fetchtvseries.domain.FetchTVSeriesUseCase\nimport com.example.movieplayer.feature.fetchtvseries.domain.TVOrder\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.ExperimentalCoroutinesApi\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.flow.flatMapLatest\nimport javax.inject.Inject\n\n@HiltViewModel\nclass TVSeriesViewModel @Inject constructor(\n    private val fetchTVSeriesUseCase: FetchTVSeriesUseCase\n) : ViewModel() {\n\n    private val _order: MutableStateFlow<TVOrder> = MutableStateFlow(TVOrder.POPULAR)\n    private val order = _order.asStateFlow()\n\n    @OptIn(ExperimentalCoroutinesApi::class)\n    val flow: Flow<PagingData<TVSeries>> = order.flatMapLatest { order ->\n        Pager(\n            PagingConfig(pageSize = 20)\n        ) {\n            TVSeriesPagingSource(fetchTVSeriesUseCase, order)\n        }\n        .flow\n        .cachedIn(viewModelScope)\n    }\n\n    fun onOrderChanged(order: TVOrder) {\n        _order.value = order\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesViewModel.kt b/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesViewModel.kt
--- a/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesViewModel.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesViewModel.kt	(date 1662305474542)
@@ -1,7 +1,5 @@
 package com.example.movieplayer.ui.tvseries
 
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.MutableLiveData
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
 import androidx.paging.Pager
@@ -9,7 +7,6 @@
 import androidx.paging.PagingData
 import androidx.paging.cachedIn
 import com.example.movieplayer.feature.fetchtvseries.data.TVSeries
-import com.example.movieplayer.feature.fetchtvseries.data.TVSeriesPagingSource
 import com.example.movieplayer.feature.fetchtvseries.domain.FetchTVSeriesUseCase
 import com.example.movieplayer.feature.fetchtvseries.domain.TVOrder
 import dagger.hilt.android.lifecycle.HiltViewModel
@@ -29,17 +26,15 @@
     private val order = _order.asStateFlow()
 
     @OptIn(ExperimentalCoroutinesApi::class)
-    val flow: Flow<PagingData<TVSeries>> = order.flatMapLatest { order ->
+    val tvSeries: Flow<PagingData<TVSeries>> = order.flatMapLatest { order ->
         Pager(
             PagingConfig(pageSize = 20)
         ) {
             TVSeriesPagingSource(fetchTVSeriesUseCase, order)
-        }
-        .flow
-        .cachedIn(viewModelScope)
-    }
+        }.flow
+    }.cachedIn(viewModelScope)
 
     fun onOrderChanged(order: TVOrder) {
         _order.value = order
     }
-}
\ No newline at end of file
+}
Index: app/src/main/res/navigation/navigation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/navigation\"\n    app:startDestination=\"@id/movieFragment\">\n\n    <fragment\n        android:id=\"@+id/movieFragment\"\n        android:name=\"com.example.movieplayer.ui.movies.MovieFragment\"\n        android:label=\"Movies\"\n        tools:layout=\"@layout/movie_list\">\n\n        <action\n            android:id=\"@+id/action_movieFragment_to_movieDetailsFragment\"\n            app:destination=\"@id/movieDetailsFragment\" />\n        <action\n            android:id=\"@+id/action_movieFragment_to_searchMoviesFragment\"\n            app:destination=\"@id/searchMoviesFragment\" />\n\n    </fragment>\n\n    <fragment\n        android:id=\"@+id/movieDetailsFragment\"\n        android:name=\"com.example.movieplayer.ui.detail.MovieDetailsFragment\"\n        android:label=\"@string/movie_details\"\n        tools:layout=\"@layout/movie_detail\">\n\n        <argument\n            android:name=\"selectedMovie\"\n            app:argType=\"com.example.movieplayer.domain.Movie\" />\n\n    </fragment>\n\n    <fragment\n        android:id=\"@+id/peopleFragment\"\n        android:name=\"com.example.movieplayer.ui.people.PeopleFragment\"\n        android:label=\"@string/people\" >\n        <action\n            android:id=\"@+id/action_peopleFragment_to_searchPeopleFragment\"\n            app:destination=\"@id/searchPeopleFragment\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/TVSeriesFragment\"\n        android:name=\"com.example.movieplayer.ui.tvseries.TVSeriesFragment\"\n        android:label=\"@string/tv_series\" />\n    <fragment\n        android:id=\"@+id/searchPeopleFragment\"\n        android:name=\"com.example.movieplayer.ui.search.people.SearchPeopleFragment\"\n        android:label=\"Search People\" />\n    <fragment\n        android:id=\"@+id/searchMoviesFragment\"\n        android:name=\"com.example.movieplayer.ui.search.movies.SearchMoviesFragment\"\n        android:label=\"Search Movies\" />\n\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/navigation.xml b/app/src/main/res/navigation/navigation.xml
--- a/app/src/main/res/navigation/navigation.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/navigation/navigation.xml	(date 1661095306692)
@@ -1,56 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
 <navigation xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
     android:id="@+id/navigation"
-    app:startDestination="@id/movieFragment">
-
-    <fragment
-        android:id="@+id/movieFragment"
-        android:name="com.example.movieplayer.ui.movies.MovieFragment"
-        android:label="Movies"
-        tools:layout="@layout/movie_list">
-
-        <action
-            android:id="@+id/action_movieFragment_to_movieDetailsFragment"
-            app:destination="@id/movieDetailsFragment" />
-        <action
-            android:id="@+id/action_movieFragment_to_searchMoviesFragment"
-            app:destination="@id/searchMoviesFragment" />
-
-    </fragment>
-
-    <fragment
-        android:id="@+id/movieDetailsFragment"
-        android:name="com.example.movieplayer.ui.detail.MovieDetailsFragment"
-        android:label="@string/movie_details"
-        tools:layout="@layout/movie_detail">
+    app:startDestination="@+id/moviesGraph">
 
-        <argument
-            android:name="selectedMovie"
-            app:argType="com.example.movieplayer.domain.Movie" />
-
-    </fragment>
-
-    <fragment
-        android:id="@+id/peopleFragment"
-        android:name="com.example.movieplayer.ui.people.PeopleFragment"
-        android:label="@string/people" >
-        <action
-            android:id="@+id/action_peopleFragment_to_searchPeopleFragment"
-            app:destination="@id/searchPeopleFragment" />
-    </fragment>
-    <fragment
-        android:id="@+id/TVSeriesFragment"
-        android:name="com.example.movieplayer.ui.tvseries.TVSeriesFragment"
-        android:label="@string/tv_series" />
-    <fragment
-        android:id="@+id/searchPeopleFragment"
-        android:name="com.example.movieplayer.ui.search.people.SearchPeopleFragment"
-        android:label="Search People" />
-    <fragment
-        android:id="@+id/searchMoviesFragment"
-        android:name="com.example.movieplayer.ui.search.movies.SearchMoviesFragment"
-        android:label="Search Movies" />
+    <include app:graph="@navigation/movies_graph" />
+    <include app:graph="@navigation/tv_graph" />
 
 </navigation>
\ No newline at end of file
Index: app/src/main/java/com/example/movieplayer/utils/Dimens.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.utils\n\nimport android.content.res.Resources.getSystem\n\nval Int.dp: Int get() = (this / getSystem().displayMetrics.density).toInt()\n\nval Int.px: Int get() = (this * getSystem().displayMetrics.density).toInt()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/utils/Dimens.kt b/app/src/main/java/com/example/movieplayer/utils/Dimens.kt
--- a/app/src/main/java/com/example/movieplayer/utils/Dimens.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/utils/Dimens.kt	(date 1661105853604)
@@ -4,4 +4,4 @@
 
 val Int.dp: Int get() = (this / getSystem().displayMetrics.density).toInt()
 
-val Int.px: Int get() = (this * getSystem().displayMetrics.density).toInt()
\ No newline at end of file
+val Int.px: Int get() = (this * getSystem().displayMetrics.density).toInt()
Index: app/src/main/res/menu/bottom_navigation_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item\n        android:id=\"@+id/movieFragment\"\n        android:enabled=\"true\"\n        android:icon=\"@drawable/ic_baseline_home_24\"\n        android:title=\"@string/home\" />\n    <item\n        android:id=\"@+id/TVSeriesFragment\"\n        android:enabled=\"true\"\n        android:icon=\"@drawable/ic_baseline_tv_24\"\n        android:title=\"@string/tv_series\" />\n    <item\n        android:id=\"@+id/peopleFragment\"\n        android:enabled=\"true\"\n        android:icon=\"@drawable/ic_baseline_people_24\"\n        android:title=\"@string/people\" />\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/bottom_navigation_menu.xml b/app/src/main/res/menu/bottom_navigation_menu.xml
--- a/app/src/main/res/menu/bottom_navigation_menu.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/menu/bottom_navigation_menu.xml	(date 1662627213760)
@@ -1,18 +1,13 @@
 <?xml version="1.0" encoding="utf-8"?>
 <menu xmlns:android="http://schemas.android.com/apk/res/android">
     <item
-        android:id="@+id/movieFragment"
+        android:id="@+id/moviesGraph"
         android:enabled="true"
         android:icon="@drawable/ic_baseline_home_24"
         android:title="@string/home" />
     <item
-        android:id="@+id/TVSeriesFragment"
+        android:id="@+id/tvGraph"
         android:enabled="true"
         android:icon="@drawable/ic_baseline_tv_24"
-        android:title="@string/tv_series" />
-    <item
-        android:id="@+id/peopleFragment"
-        android:enabled="true"
-        android:icon="@drawable/ic_baseline_people_24"
-        android:title="@string/people" />
+        android:title="@string/tv_series_label" />
 </menu>
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\nplugins {\n    id 'com.android.application'\n    id 'kotlin-android'\n    id 'kotlin-kapt'\n    id 'kotlin-parcelize'\n    id 'androidx.navigation.safeargs.kotlin'\n    id 'dagger.hilt.android.plugin'\n}\n\nandroid {\n    compileSdkVersion 32\n\n    defaultConfig {\n        applicationId \"com.example.movieplayer\"\n        minSdkVersion 23\n        targetSdkVersion 32\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled true\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_11\n        targetCompatibility JavaVersion.VERSION_11\n    }\n    kotlinOptions {\n        jvmTarget = '11'\n    }\n\n    buildFeatures {\n        dataBinding true\n        viewBinding true\n    }\n}\n\ndependencies {\n    implementation \"androidx.core:core-ktx:1.8.0\"\n    implementation \"androidx.appcompat:appcompat:1.4.2\"\n    implementation \"com.google.android.material:material:1.6.1\"\n    implementation \"androidx.constraintlayout:constraintlayout:2.1.4\"\n\n    implementation \"androidx.cardview:cardview:1.0.0\"\n\n    implementation \"androidx.recyclerview:recyclerview:1.2.1\"\n\n    implementation \"com.squareup.okhttp3:logging-interceptor:4.9.1\"\n    implementation \"com.squareup.retrofit2:retrofit:$version_retrofit\"\n    implementation \"com.squareup.retrofit2:converter-moshi:$version_retrofit\"\n    implementation \"com.squareup.moshi:moshi:$version_moshi\"\n    kapt\"com.squareup.moshi:moshi-kotlin-codegen:$version_moshi\"\n\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n\n    implementation \"androidx.fragment:fragment-ktx:$version_fragment\"\n\n    implementation \"androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle\"\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle\"\n\n    implementation \"androidx.room:room-runtime:$version_room\"\n    kapt \"androidx.room:room-compiler:$version_room\"\n\n    implementation \"androidx.navigation:navigation-fragment-ktx:$version_navigation\"\n    implementation \"androidx.navigation:navigation-ui-ktx:$version_navigation\"\n\n    implementation\"com.google.dagger:hilt-android:$version_hilt\"\n    kapt\"com.google.dagger:hilt-android-compiler:$version_hilt\"\n\n    implementation \"androidx.paging:paging-runtime:$version_paging\"\n\n    implementation\"io.coil-kt:coil:2.1.0\"\n\n}\n\nkapt {\n    correctErrorTypes = true\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/build.gradle	(date 1662546862400)
@@ -19,6 +19,11 @@
         versionName "1.0"
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+
+        Properties properties = new Properties()
+        properties.load(project.rootProject.file('local.properties').newDataInputStream())
+
+        buildConfigField "String", "API_KEY", "\"${properties.getProperty('API_KEY')}\""
     }
 
     buildTypes {
@@ -43,7 +48,7 @@
 
 dependencies {
     implementation "androidx.core:core-ktx:1.8.0"
-    implementation "androidx.appcompat:appcompat:1.4.2"
+    implementation "androidx.appcompat:appcompat:1.5.0"
     implementation "com.google.android.material:material:1.6.1"
     implementation "androidx.constraintlayout:constraintlayout:2.1.4"
 
@@ -74,8 +79,10 @@
 
     implementation"com.google.dagger:hilt-android:$version_hilt"
     kapt"com.google.dagger:hilt-android-compiler:$version_hilt"
+    implementation"androidx.hilt:hilt-navigation-fragment:1.0.0"
 
-    implementation "androidx.paging:paging-runtime:$version_paging"
+
+    implementation "androidx.paging:paging-runtime-ktx:$version_paging"
 
     implementation"io.coil-kt:coil:2.1.0"
 
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\nbuildscript {\n    ext {\n        version_kotlin = \"1.7.0\"\n        version_moshi = \"1.13.0\"\n        version_navigation = \"1.1.0\"\n        version_retrofit = \"2.9.0\"\n        version_recyclerview = \"1.1.0\"\n        version_navigation = \"2.5.0\"\n        version_fragment = \"1.5.0\"\n        version_lifecycle = \"2.5.0\"\n        version_room = \"2.4.2\"\n        version_hilt = \"2.42\"\n        version_paging = \"3.1.1\"\n        version_coil = \"2.1.0\"\n\n    }\n    repositories {\n        google()\n        mavenCentral()\n    }\n    dependencies {\n        classpath(\"com.android.tools.build:gradle:7.2.1\")\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin\"\n        classpath(\"androidx.navigation:navigation-safe-args-gradle-plugin:$version_navigation\")\n        classpath(\"com.google.dagger:hilt-android-gradle-plugin:$version_hilt\")\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/build.gradle	(date 1662578539673)
@@ -1,18 +1,18 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 buildscript {
     ext {
-        version_kotlin = "1.7.0"
+        version_kotlin = "1.7.10"
         version_moshi = "1.13.0"
-        version_navigation = "1.1.0"
         version_retrofit = "2.9.0"
         version_recyclerview = "1.1.0"
-        version_navigation = "2.5.0"
-        version_fragment = "1.5.0"
-        version_lifecycle = "2.5.0"
-        version_room = "2.4.2"
+        version_navigation = "2.5.2"
+        version_fragment = "1.5.2"
+        version_lifecycle = "2.5.1"
+        version_room = "2.4.3"
         version_hilt = "2.42"
         version_paging = "3.1.1"
         version_coil = "2.1.0"
+        version_gradle = "7.2.2"
 
     }
     repositories {
@@ -20,8 +20,8 @@
         mavenCentral()
     }
     dependencies {
-        classpath("com.android.tools.build:gradle:7.2.1")
-        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
+        classpath("com.android.tools.build:gradle:$version_gradle")
+        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin")
         classpath("androidx.navigation:navigation-safe-args-gradle-plugin:$version_navigation")
         classpath("com.google.dagger:hilt-android-gradle-plugin:$version_hilt")
 
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <color name=\"purple_200\">#FFBB86FC</color>\n    <color name=\"purple_500\">#FF6200EE</color>\n    <color name=\"purple_700\">#FF3700B3</color>\n    <color name=\"teal_200\">#FF03DAC5</color>\n    <color name=\"teal_700\">#FF018786</color>\n    <color name=\"black\">#FF000000</color>\n    <color name=\"white\">#FFFFFFFF</color>\n    <color name=\"grey\">#b0bec5</color>\n    <color name=\"mercury\">#e5e5e5</color>\n    <color name=\"orange\">#ff7043</color>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/values/colors.xml	(date 1662580455583)
@@ -1,14 +1,11 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="purple_200">#FFBB86FC</color>
-    <color name="purple_500">#FF6200EE</color>
-    <color name="purple_700">#FF3700B3</color>
-    <color name="teal_200">#FF03DAC5</color>
-    <color name="teal_700">#FF018786</color>
     <color name="black">#FF000000</color>
+    <color name="dark_grey">#272727</color>
     <color name="white">#FFFFFFFF</color>
     <color name="grey">#b0bec5</color>
     <color name="mercury">#e5e5e5</color>
-    <color name="orange">#ff7043</color>
-
+    <color name="orange">#D54F25</color>
+    <color name="second_orange">#FF5722</color>
+    <color name="sonic_silver">#C7C4C4</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/crew_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<layout xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <data>\n\n        <variable\n            name=\"crew\"\n            type=\"com.example.movieplayer.feature.fetchcredits.data.Crew\" />\n    </data>\n\n    <androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:padding=\"8dp\">\n\n        <ImageView\n            android:id=\"@+id/poster\"\n            android:layout_width=\"100dp\"\n            android:layout_height=\"wrap_content\"\n            android:adjustViewBounds=\"true\"\n            app:imageUrl=\"@{crew.path}\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:layout_constraintBottom_toTopOf=\"@id/name\"\n            tools:srcCompat=\"@drawable/poster\" />\n\n        <TextView\n            android:id=\"@+id/name\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"@{crew.name}\"\n            app:layout_constraintEnd_toEndOf=\"@id/poster\"\n            app:layout_constraintStart_toStartOf=\"@id/poster\"\n            app:layout_constraintBottom_toTopOf=\"@id/job\"\n            tools:text=\"Name of Crew\" />\n\n        <TextView\n            android:id=\"@+id/job\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"@{crew.job}\"\n            app:layout_constraintEnd_toEndOf=\"@id/poster\"\n            app:layout_constraintStart_toStartOf=\"@id/poster\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            tools:text=\"Director\"/>\n\n    </androidx.constraintlayout.widget.ConstraintLayout>\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/crew_item.xml b/app/src/main/res/layout/crew_item.xml
--- a/app/src/main/res/layout/crew_item.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/layout/crew_item.xml	(date 1661460616794)
@@ -24,27 +24,29 @@
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintStart_toStartOf="parent"
             app:layout_constraintTop_toTopOf="parent"
-            app:layout_constraintBottom_toTopOf="@id/name"
             tools:srcCompat="@drawable/poster" />
 
         <TextView
             android:id="@+id/name"
-            android:layout_width="wrap_content"
+            android:layout_width="0dp"
             android:layout_height="wrap_content"
             android:text="@{crew.name}"
+            android:textAppearance="?attr/textAppearanceBody1"
             app:layout_constraintEnd_toEndOf="@id/poster"
             app:layout_constraintStart_toStartOf="@id/poster"
-            app:layout_constraintBottom_toTopOf="@id/job"
+            app:layout_constraintTop_toBottomOf="@id/poster"
             tools:text="Name of Crew" />
 
         <TextView
             android:id="@+id/job"
-            android:layout_width="wrap_content"
+            android:layout_width="0dp"
             android:layout_height="wrap_content"
             android:text="@{crew.job}"
+            android:paddingTop="8dp"
+            android:textAppearance="?attr/textAppearanceBody2"
             app:layout_constraintEnd_toEndOf="@id/poster"
             app:layout_constraintStart_toStartOf="@id/poster"
-            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/name"
             tools:text="Director"/>
 
     </androidx.constraintlayout.widget.ConstraintLayout>
Index: .idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ProjectCodeStyleConfiguration\">\n  <code_scheme name=\"Project\" version=\"173\">\n    <JetCodeStyleSettings>\n      <option name=\"CODE_STYLE_DEFAULTS\" value=\"KOTLIN_OFFICIAL\" />\n    </JetCodeStyleSettings>\n    <codeStyleSettings language=\"XML\">\n      <option name=\"FORCE_REARRANGE_MODE\" value=\"1\" />\n      <indentOptions>\n        <option name=\"CONTINUATION_INDENT_SIZE\" value=\"4\" />\n      </indentOptions>\n      <arrangement>\n        <rules>\n          <section>\n            <rule>\n              <match>\n                <AND>\n                  <NAME>xmlns:android</NAME>\n                  <XML_ATTRIBUTE />\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\n                </AND>\n              </match>\n            </rule>\n          </section>\n          <section>\n            <rule>\n              <match>\n                <AND>\n                  <NAME>xmlns:.*</NAME>\n                  <XML_ATTRIBUTE />\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\n                </AND>\n              </match>\n              <order>BY_NAME</order>\n            </rule>\n          </section>\n          <section>\n            <rule>\n              <match>\n                <AND>\n                  <NAME>.*:id</NAME>\n                  <XML_ATTRIBUTE />\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\n                </AND>\n              </match>\n            </rule>\n          </section>\n          <section>\n            <rule>\n              <match>\n                <AND>\n                  <NAME>.*:name</NAME>\n                  <XML_ATTRIBUTE />\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\n                </AND>\n              </match>\n            </rule>\n          </section>\n          <section>\n            <rule>\n              <match>\n                <AND>\n                  <NAME>name</NAME>\n                  <XML_ATTRIBUTE />\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\n                </AND>\n              </match>\n            </rule>\n          </section>\n          <section>\n            <rule>\n              <match>\n                <AND>\n                  <NAME>style</NAME>\n                  <XML_ATTRIBUTE />\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\n                </AND>\n              </match>\n            </rule>\n          </section>\n          <section>\n            <rule>\n              <match>\n                <AND>\n                  <NAME>.*</NAME>\n                  <XML_ATTRIBUTE />\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\n                </AND>\n              </match>\n              <order>BY_NAME</order>\n            </rule>\n          </section>\n          <section>\n            <rule>\n              <match>\n                <AND>\n                  <NAME>.*</NAME>\n                  <XML_ATTRIBUTE />\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\n                </AND>\n              </match>\n              <order>ANDROID_ATTRIBUTE_ORDER</order>\n            </rule>\n          </section>\n          <section>\n            <rule>\n              <match>\n                <AND>\n                  <NAME>.*</NAME>\n                  <XML_ATTRIBUTE />\n                  <XML_NAMESPACE>.*</XML_NAMESPACE>\n                </AND>\n              </match>\n              <order>BY_NAME</order>\n            </rule>\n          </section>\n        </rules>\n      </arrangement>\n    </codeStyleSettings>\n    <codeStyleSettings language=\"kotlin\">\n      <option name=\"CODE_STYLE_DEFAULTS\" value=\"KOTLIN_OFFICIAL\" />\n    </codeStyleSettings>\n  </code_scheme>\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/codeStyles/Project.xml b/.idea/codeStyles/Project.xml
--- a/.idea/codeStyles/Project.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/.idea/codeStyles/Project.xml	(date 1660298069376)
@@ -1,6 +1,8 @@
 <component name="ProjectCodeStyleConfiguration">
   <code_scheme name="Project" version="173">
     <JetCodeStyleSettings>
+      <option name="NAME_COUNT_TO_USE_STAR_IMPORT" value="99" />
+      <option name="NAME_COUNT_TO_USE_STAR_IMPORT_FOR_MEMBERS" value="99" />
       <option name="CODE_STYLE_DEFAULTS" value="KOTLIN_OFFICIAL" />
     </JetCodeStyleSettings>
     <codeStyleSettings language="XML">
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.movieplayer\">\n\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n\n    <application\n        android:name=\".MovieApplication\"\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.MoviePlayer\">\n\n        <activity\n            android:name=\".MainActivity\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/AndroidManifest.xml	(date 1661789459576)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.example.movieplayer">
-
+    <!-- TODO change package name to beti1205.movieapp -->
     <uses-permission android:name="android.permission.INTERNET" />
 
     <application
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\n    <!-- Base application theme. -->\n    <style name=\"Theme.MoviePlayer\" parent=\"Theme.MaterialComponents.DayNight.NoActionBar\">\n        <!-- Primary brand color. -->\n        <item name=\"colorPrimary\">@color/orange</item>\n        <item name=\"colorPrimaryVariant\">@color/purple_700</item>\n        <item name=\"colorOnPrimary\">@color/white</item>\n        <!-- Secondary brand color. -->\n        <item name=\"colorSecondary\">@color/purple_200</item>\n        <item name=\"colorSecondaryVariant\">@color/teal_700</item>\n        <item name=\"colorOnSecondary\">@color/black</item>\n        <!-- Status bar color. -->\n        <item name=\"android:statusBarColor\" tools:targetApi=\"l\">@color/grey</item>\n        <item name=\"toolbarStyle\">@style/Widget.App.Toolbar</item>\n        <!-- Customize your theme here. -->\n    </style>\n\n    <style name=\"Widget.App.Toolbar\" parent=\"Widget.MaterialComponents.Toolbar.Primary\">\n        <item name=\"materialThemeOverlay\">@style/ThemeOverlay.App.Toolbar</item>\n        <item name=\"titleTextAppearance\">@style/ToolbarTextAppearance</item>\n    </style>\n\n    <style name=\"ToolbarTextAppearance\" parent=\"TextAppearance.MaterialComponents.Headline6\">\n        <item name=\"android:textSize\">24sp</item>\n    </style>\n\n    <style name=\"ThemeOverlay.App.Toolbar\" parent=\"\">\n        <item name=\"colorPrimary\">@color/white</item>\n        <item name=\"colorOnPrimary\">@color/black</item>\n    </style>\n\n    <style name=\"ChipChoice\" parent=\"Widget.MaterialComponents.Chip.Choice\">\n        <item name=\"android:textColor\">@color/chip_text_color</item>\n        <item name=\"android:textAppearance\">@style/ChoiceChipTextAppearance</item>\n        <item name=\"chipBackgroundColor\">@color/chip_background_color</item>\n    </style>\n\n    <style name=\"ChoiceChipTextAppearance\" parent=\"TextAppearance.MaterialComponents.Chip\">\n        <item name=\"android:textSize\">12sp</item>\n    </style>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
--- a/app/src/main/res/values/themes.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/values/themes.xml	(date 1662581815041)
@@ -2,17 +2,19 @@
     <!-- Base application theme. -->
     <style name="Theme.MoviePlayer" parent="Theme.MaterialComponents.DayNight.NoActionBar">
         <!-- Primary brand color. -->
-        <item name="colorPrimary">@color/orange</item>
-        <item name="colorPrimaryVariant">@color/purple_700</item>
-        <item name="colorOnPrimary">@color/white</item>
+        <item name="colorPrimary">@color/white</item>
+        <item name="colorPrimaryVariant">@color/mercury</item>
+        <item name="colorOnPrimary">@color/black</item>
         <!-- Secondary brand color. -->
-        <item name="colorSecondary">@color/purple_200</item>
-        <item name="colorSecondaryVariant">@color/teal_700</item>
-        <item name="colorOnSecondary">@color/black</item>
+        <item name="colorSecondary">@color/orange</item>
+        <item name="colorSecondaryVariant">@color/second_orange</item>
+        <item name="colorOnSecondary">@color/white</item>
         <!-- Status bar color. -->
-        <item name="android:statusBarColor" tools:targetApi="l">@color/grey</item>
+        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimary</item>
+        <item name="android:windowLightStatusBar">true</item>
         <item name="toolbarStyle">@style/Widget.App.Toolbar</item>
-        <!-- Customize your theme here. -->
+        <item name="bottomNavigationStyle">@style/Widget.App.BottomNavigationView</item>
+        <!--        &lt;!&ndash; Customize your theme here. &ndash;&gt;-->
     </style>
 
     <style name="Widget.App.Toolbar" parent="Widget.MaterialComponents.Toolbar.Primary">
@@ -24,9 +26,9 @@
         <item name="android:textSize">24sp</item>
     </style>
 
-    <style name="ThemeOverlay.App.Toolbar" parent="">
+    <style name="ThemeOverlay.App.Toolbar" parent="ThemeOverlay.MaterialComponents.Toolbar.Primary">
         <item name="colorPrimary">@color/white</item>
-        <item name="colorOnPrimary">@color/black</item>
+        <item name="colorOnPrimary">@color/dark_grey</item>
     </style>
 
     <style name="ChipChoice" parent="Widget.MaterialComponents.Chip.Choice">
@@ -39,4 +41,34 @@
         <item name="android:textSize">12sp</item>
     </style>
 
+    <style name="Widget.App.BottomNavigationView" parent="Widget.MaterialComponents.BottomNavigationView.Colored">
+        <item name="materialThemeOverlay">@style/ThemeOverlay.App.BottomNavigationView</item>
+    </style>
+
+    <style name="ThemeOverlay.App.BottomNavigationView" parent="">
+        <item name="colorPrimary">@color/orange</item>
+        <item name="colorOnPrimary">@color/white</item>
+    </style>
+
+    <style name="ExposedDropdownMenu" parent="Widget.MaterialComponents.TextInputLayout.FilledBox.ExposedDropdownMenu">
+        <item name="android:textColorHint">@color/orange</item>
+        <item name="boxBackgroundColor">?attr/colorPrimaryVariant</item>
+        <item name="materialThemeOverlay">@style/ThemeOverlay.App.ExposedDropdownMenu</item>
+    </style>
+
+    <style name="ThemeOverlay.App.ExposedDropdownMenu" parent="ThemeOverlay.MaterialComponents.AutoCompleteTextView.FilledBox">
+        <item name="colorPrimary">@color/orange</item>
+        <item name="colorOnSurface">@color/orange</item>
+    </style>
+
+    <style name="EmptyStateIcon">
+        <item name="tint">@color/sonic_silver</item>
+    </style>
+
+    <style name="EmptyStateText">
+        <item name="android:textColor">@color/sonic_silver</item>
+        <item name="android:textAppearance">?attr/textAppearanceSubtitle2</item>
+        <item name="android:textAlignment">center</item>
+    </style>
+
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/movieplayer/ui/search/tvseries/SearchTVSeriesFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/search/tvseries/SearchTVSeriesFragment.kt b/app/src/main/java/com/example/movieplayer/ui/tvseries/search/SearchTVSeriesFragment.kt
rename from app/src/main/java/com/example/movieplayer/ui/search/tvseries/SearchTVSeriesFragment.kt
rename to app/src/main/java/com/example/movieplayer/ui/tvseries/search/SearchTVSeriesFragment.kt
--- a/app/src/main/java/com/example/movieplayer/ui/search/tvseries/SearchTVSeriesFragment.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/tvseries/search/SearchTVSeriesFragment.kt	(date 1662727128758)
@@ -1,7 +1,8 @@
-package com.example.movieplayer.ui.search.tvseries
+package com.example.movieplayer.ui.tvseries.search
 
 import android.os.Bundle
 import android.view.View
+import androidx.activity.addCallback
 import androidx.core.view.doOnPreDraw
 import androidx.core.widget.doAfterTextChanged
 import androidx.fragment.app.Fragment
@@ -13,12 +14,15 @@
 import com.example.movieplayer.MainActivity
 import com.example.movieplayer.R
 import com.example.movieplayer.databinding.SearchListBinding
+import com.example.movieplayer.feature.fetchtvseries.data.TVSeries
+import com.example.movieplayer.ui.common.updateState
 import com.example.movieplayer.ui.tvseries.TVSeriesAdapter
 import com.example.movieplayer.utils.hideKeyboard
 import com.example.movieplayer.utils.showKeyboard
 import com.google.android.material.transition.MaterialElevationScale
 import dagger.hilt.android.AndroidEntryPoint
 import kotlinx.coroutines.flow.collectLatest
+import kotlinx.coroutines.flow.distinctUntilChangedBy
 import kotlinx.coroutines.launch
 
 @AndroidEntryPoint
@@ -26,42 +30,44 @@
 
     private val viewModel: SearchTVSeriesViewModel by viewModels()
 
+    companion object {
+        const val DURATION = 300L
+    }
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         exitTransition = MaterialElevationScale(false).apply {
-            duration = 300
+            duration = DURATION
         }
         reenterTransition = MaterialElevationScale(true).apply {
-            duration = 300
+            duration = DURATION
         }
     }
 
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
 
+        requireActivity().onBackPressedDispatcher.addCallback(viewLifecycleOwner) {
+            (requireActivity() as MainActivity).searchEditText.setText("")
+            findNavController().popBackStack()
+        }
+
         val binding: SearchListBinding = SearchListBinding.bind(requireView())
-
         binding.lifecycleOwner = viewLifecycleOwner
 
-        binding.searchRecyclerView.layoutManager = GridLayoutManager(context, 2)
-
-        val tvSeriesAdapter = TVSeriesAdapter { itemView, tvSeries ->
-            val extras = FragmentNavigatorExtras(
-                itemView to getString(R.string.tv_card_detail_transition_name)
-            )
-            findNavController().navigate(
-                SearchTVSeriesFragmentDirections.actionSearchTvSeriesFragmentToTVSeriesDetailsFragment(
-                    tvSeries
-                ),
-                extras
-            )
-        }
-        binding.searchRecyclerView.adapter = tvSeriesAdapter
-
         val activity = activity as? MainActivity
         val actionBar = activity?.supportActionBar
         actionBar?.title = null
 
+        val tvSeriesAdapter = TVSeriesAdapter { itemView, tvSeries ->
+            navigateToTvSeriesDetails(itemView, tvSeries)
+        }
+        binding.searchRecyclerView.layoutManager = GridLayoutManager(context, 2)
+        binding.searchRecyclerView.adapter = tvSeriesAdapter
+
+        view.doOnPreDraw { startPostponedEnterTransition() }
+        postponeEnterTransition()
+
         activity?.searchEditText?.apply {
             requestFocus()
             showKeyboard(this)
@@ -75,12 +81,37 @@
             }
         }
 
+        binding.searchRetryButton.setOnClickListener {
+            tvSeriesAdapter.retry()
+        }
+
         viewLifecycleOwner.lifecycleScope.launch {
             viewModel.querySearchResults.collectLatest { pagingData ->
                 tvSeriesAdapter.submitData(pagingData)
             }
         }
-        view.doOnPreDraw { startPostponedEnterTransition() }
-        postponeEnterTransition()
+
+        viewLifecycleOwner.lifecycleScope.launch {
+            tvSeriesAdapter.loadStateFlow
+                .distinctUntilChangedBy { it.refresh }
+                .collect { loadStates ->
+                    binding.updateState(loadStates, tvSeriesAdapter)
+                }
+        }
+    }
+
+    private fun navigateToTvSeriesDetails(
+        itemView: View,
+        tvSeries: TVSeries
+    ) {
+        val extras = FragmentNavigatorExtras(
+            itemView to getString(R.string.tv_card_detail_transition_name)
+        )
+        findNavController().navigate(
+            SearchTVSeriesFragmentDirections.actionSearchTvSeriesFragmentToTVSeriesDetailsFragment(
+                tvSeries
+            ),
+            extras
+        )
     }
 }
Index: app/src/main/res/values-night/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\n    <!-- Base application theme. -->\n    <style name=\"Theme.MoviePlayer\" parent=\"Theme.MaterialComponents.DayNight.NoActionBar\">\n        <!-- Primary brand color. -->\n        <item name=\"colorPrimary\">@color/purple_200</item>\n        <item name=\"colorPrimaryVariant\">@color/purple_700</item>\n        <item name=\"colorOnPrimary\">@color/black</item>\n        <!-- Secondary brand color. -->\n        <item name=\"colorSecondary\">@color/teal_200</item>\n        <item name=\"colorSecondaryVariant\">@color/teal_200</item>\n        <item name=\"colorOnSecondary\">@color/black</item>\n        <!-- Status bar color. -->\n        <item name=\"android:statusBarColor\" tools:targetApi=\"l\">?attr/colorPrimaryVariant</item>\n        <!-- Customize your theme here. -->\n    </style>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-night/themes.xml b/app/src/main/res/values-night/themes.xml
--- a/app/src/main/res/values-night/themes.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/values-night/themes.xml	(date 1662639661514)
@@ -2,15 +2,35 @@
     <!-- Base application theme. -->
     <style name="Theme.MoviePlayer" parent="Theme.MaterialComponents.DayNight.NoActionBar">
         <!-- Primary brand color. -->
-        <item name="colorPrimary">@color/purple_200</item>
-        <item name="colorPrimaryVariant">@color/purple_700</item>
-        <item name="colorOnPrimary">@color/black</item>
+        <item name="colorPrimary">@color/black</item>
+        <item name="colorPrimaryVariant">@color/dark_grey</item>
+        <item name="colorOnPrimary">@color/white</item>
         <!-- Secondary brand color. -->
-        <item name="colorSecondary">@color/teal_200</item>
-        <item name="colorSecondaryVariant">@color/teal_200</item>
-        <item name="colorOnSecondary">@color/black</item>
+        <item name="colorSecondary">@color/orange</item>
+        <item name="colorSecondaryVariant">@color/second_orange</item>
+        <item name="colorOnSecondary">@color/white</item>
         <!-- Status bar color. -->
-        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
+        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimary</item>
+        <item name="bottomNavigationStyle">@style/Widget.App.BottomNavigationView</item>
+        <item name="materialButtonStyle">@style/Widget.App.Button</item>
         <!-- Customize your theme here. -->
     </style>
+
+    <style name="Widget.App.BottomNavigationView" parent="Widget.MaterialComponents.BottomNavigationView.Colored">
+        <item name="materialThemeOverlay">@style/ThemeOverlay.App.BottomNavigationView</item>
+    </style>
+
+    <style name="ThemeOverlay.App.BottomNavigationView" parent="">
+        <item name="colorPrimary">@color/orange</item>
+        <item name="colorOnPrimary">@color/white</item>
+    </style>
+
+    <style name="Widget.App.Button" parent="Widget.MaterialComponents.Button">
+    <item name="materialThemeOverlay">@style/ThemeOverlay.App.Button</item>
+    </style>
+
+    <style name="ThemeOverlay.App.Button" parent="">
+        <item name="colorPrimary">@color/white</item>
+        <item name="colorOnPrimary">@color/black</item>
+    </style>
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/item_details.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_details.xml b/app/src/main/res/layout/movie_details.xml
rename from app/src/main/res/layout/item_details.xml
rename to app/src/main/res/layout/movie_details.xml
--- a/app/src/main/res/layout/item_details.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/layout/movie_details.xml	(date 1662667113416)
@@ -7,17 +7,18 @@
 
         <variable
             name="viewModel"
-            type="com.example.movieplayer.ui.detail.MovieDetailsViewModel" />
+            type="com.example.movieplayer.ui.movies.details.MovieDetailsViewModel" />
     </data>
 
     <androidx.core.widget.NestedScrollView
         android:id="@+id/nestedScrollView"
         android:layout_width="match_parent"
-        android:layout_height="match_parent">
+        android:layout_height="match_parent"
+        android:transitionName="@string/movie_card_detail_transition_name">
 
         <androidx.constraintlayout.widget.ConstraintLayout
             android:layout_width="match_parent"
-            android:layout_height="match_parent">
+            android:layout_height="wrap_content">
 
             <ImageView
                 android:id="@+id/imageView"
@@ -45,8 +46,8 @@
                     android:layout_gravity="center"
                     android:gravity="start"
                     android:text="@{viewModel.selectedMovie.title}"
-                    android:textColor="@color/orange"
-                    android:textSize="22sp"
+                    android:textAppearance="?attr/textAppearanceHeadline6"
+                    android:textColor="?attr/colorSecondary"
                     app:layout_constraintBottom_toTopOf="@id/releaseData"
                     tools:text="Title" />
 
@@ -56,7 +57,7 @@
                     android:layout_height="wrap_content"
                     android:paddingBottom="8dp"
                     android:text="@{viewModel.selectedMovie.releaseDate}"
-                    android:textColor="@color/grey"
+                    android:textAppearance="?attr/textAppearanceCaption"
                     app:layout_constraintEnd_toStartOf="@+id/voteAverage"
                     app:layout_constraintHorizontal_bias="0.5"
                     app:layout_constraintHorizontal_chainStyle="spread_inside"
@@ -72,7 +73,7 @@
                     app:layout_constraintEnd_toStartOf="@id/voteAverage"
                     app:layout_constraintTop_toBottomOf="@id/title"
                     app:srcCompat="@drawable/ic_baseline_stars_24"
-                    app:tint="@color/orange" />
+                    app:tint="?attr/colorSecondary" />
 
                 <TextView
                     android:id="@+id/voteAverage"
@@ -80,7 +81,7 @@
                     android:layout_height="wrap_content"
                     android:paddingBottom="8dp"
                     android:text="@{viewModel.selectedMovie.votes}"
-                    android:textSize="18sp"
+                    android:textAppearance="?attr/textAppearanceSubtitle1"
                     app:layout_constraintEnd_toEndOf="parent"
                     app:layout_constraintHorizontal_bias="0.5"
                     app:layout_constraintStart_toEndOf="@+id/releaseData"
@@ -91,8 +92,10 @@
                     android:id="@+id/overview"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
+                    android:justificationMode="inter_word"
                     android:paddingBottom="8dp"
                     android:text="@{viewModel.selectedMovie.overview}"
+                    android:textAppearance="?attr/textAppearanceBody2"
                     app:layout_constraintTop_toBottomOf="@id/releaseData"
                     tools:text="About Movie" />
 
@@ -108,19 +111,18 @@
                     android:layout_height="wrap_content"
                     android:layout_gravity="center"
                     android:gravity="start"
-                    android:text="Cast"
-                    android:textColor="@color/orange"
-                    android:textSize="22sp"
+                    android:text="@string/cast"
+                    android:textAppearance="?attr/textAppearanceHeadline6"
+                    android:textColor="?attr/colorSecondary"
                     android:visibility="@{!viewModel.hasError}"
                     app:layout_constraintStart_toStartOf="parent"
                     app:layout_constraintTop_toBottomOf="@id/divider"
                     tools:text="Title" />
 
                 <androidx.recyclerview.widget.RecyclerView
-                    android:id="@+id/recycler_view"
+                    android:id="@+id/castRecyclerView"
                     android:layout_width="0dp"
                     android:layout_height="wrap_content"
-                    android:layout_marginTop="8dp"
                     android:orientation="horizontal"
                     android:visibility="@{!viewModel.hasError}"
                     app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
@@ -128,14 +130,14 @@
                     app:layout_constraintStart_toStartOf="parent"
                     app:layout_constraintTop_toBottomOf="@id/cast"
                     app:listCastData="@{viewModel.cast}"
-                    tools:listitem="@layout/movie_item" />
+                    tools:listitem="@layout/cast_item" />
 
                 <com.google.android.material.divider.MaterialDivider
                     android:id="@+id/secondDivider"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:visibility="@{!viewModel.hasError}"
-                    app:layout_constraintTop_toBottomOf="@id/recycler_view" />
+                    app:layout_constraintTop_toBottomOf="@id/castRecyclerView" />
 
                 <TextView
                     android:id="@+id/crew"
@@ -143,9 +145,9 @@
                     android:layout_height="wrap_content"
                     android:layout_gravity="center"
                     android:gravity="start"
-                    android:text="Crew"
-                    android:textColor="@color/orange"
-                    android:textSize="22sp"
+                    android:text="@string/crew"
+                    android:textAppearance="?attr/textAppearanceHeadline6"
+                    android:textColor="?attr/colorSecondary"
                     android:visibility="@{!viewModel.hasError}"
                     app:layout_constraintStart_toStartOf="parent"
                     app:layout_constraintTop_toBottomOf="@id/secondDivider"
@@ -155,7 +157,6 @@
                     android:id="@+id/crewRecyclerView"
                     android:layout_width="0dp"
                     android:layout_height="wrap_content"
-                    android:layout_marginTop="8dp"
                     android:orientation="horizontal"
                     android:visibility="@{!viewModel.hasError}"
                     app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
@@ -164,32 +165,29 @@
                     app:layout_constraintStart_toStartOf="parent"
                     app:layout_constraintTop_toBottomOf="@id/crew"
                     app:listCrewData="@{viewModel.crew}"
-                    tools:listitem="@layout/movie_item" />
+                    tools:listitem="@layout/crew_item" />
 
                 <ImageView
-                    android:id="@+id/empty_state"
-                    android:layout_width="120dp"
-                    android:layout_height="120dp"
+                    android:id="@+id/emptyState"
+                    style="@style/EmptyStateIcon"
+                    android:layout_width="140dp"
+                    android:layout_height="140dp"
                     android:visibility="@{viewModel.hasError}"
-                    app:layout_constraintTop_toBottomOf="@id/divider"
                     app:layout_constraintEnd_toEndOf="parent"
                     app:layout_constraintStart_toStartOf="parent"
-                    app:srcCompat="@drawable/error_image"
-                    app:tint="@color/grey" />
+                    app:layout_constraintTop_toBottomOf="@id/divider"
+                    app:srcCompat="@drawable/ic_baseline_broken_image_24" />
 
                 <TextView
-                    android:id="@+id/empty_state_message"
+                    android:id="@+id/emptyStateMessage"
+                    style="@style/EmptyStateText"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
-                    android:layout_marginTop="16dp"
-                    android:gravity="center"
-                    android:text="Error"
-                    android:textAppearance="@style/TextAppearance.MaterialComponents.Body1"
-                    android:textColor="@color/grey"
+                    android:text="@string/connection_error_message"
                     android:visibility="@{viewModel.hasError}"
                     app:layout_constraintEnd_toEndOf="parent"
                     app:layout_constraintStart_toStartOf="parent"
-                    app:layout_constraintTop_toBottomOf="@id/empty_state" />
+                    app:layout_constraintTop_toBottomOf="@id/emptyState" />
 
             </androidx.constraintlayout.widget.ConstraintLayout>
         </androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/SearchTVSeriesPagingSource.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/SearchTVSeriesPagingSource.kt b/app/src/main/java/com/example/movieplayer/ui/tvseries/search/SearchTVSeriesPagingSource.kt
rename from app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/SearchTVSeriesPagingSource.kt
rename to app/src/main/java/com/example/movieplayer/ui/tvseries/search/SearchTVSeriesPagingSource.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/SearchTVSeriesPagingSource.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/tvseries/search/SearchTVSeriesPagingSource.kt	(date 1662311316322)
@@ -1,23 +1,30 @@
-package com.example.movieplayer.feature.fetchtvseries.data
+package com.example.movieplayer.ui.tvseries.search
 
 import android.util.Log
 import androidx.paging.PagingSource
 import androidx.paging.PagingState
 import com.example.movieplayer.common.Result
-import com.example.movieplayer.common.getNextPageKey
+import com.example.movieplayer.feature.fetchtvseries.data.TVSeries
 import com.example.movieplayer.feature.fetchtvseries.domain.SearchTVSeriesUseCase
+import com.example.movieplayer.ui.common.TooShortQueryException
+import com.example.movieplayer.ui.common.getNextPageKey
+import com.example.movieplayer.ui.tvseries.getTVSeriesRefreshKey
 
 class SearchTVSeriesPagingSource(
     val searchTVSeriesUseCase: SearchTVSeriesUseCase,
     private val query: String
 ) : PagingSource<Int, TVSeries>() {
 
-    override suspend fun load(params: PagingSource.LoadParams<Int>): PagingSource.LoadResult<Int, TVSeries> {
+    override suspend fun load(params: LoadParams<Int>): LoadResult<Int, TVSeries> {
+        if (query.length <= 3) {
+            return LoadResult.Error(TooShortQueryException)
+        }
+
         val nextPageNumber = params.key ?: 1
         val response = searchTVSeriesUseCase(query, nextPageNumber)
         return when (response) {
             is Result.Success -> {
-                PagingSource.LoadResult.Page(
+                LoadResult.Page(
                     data = response.data.items,
                     prevKey = null,
                     nextKey = response.data.getNextPageKey()
@@ -25,15 +32,12 @@
             }
             is Result.Error -> {
                 Log.d("SearchTVSeriesPagingSource", response.message.toString())
-                PagingSource.LoadResult.Error(response.message ?: Exception("Unable to load items"))
+                LoadResult.Error(response.message ?: Exception("Unable to load items"))
             }
         }
     }
 
     override fun getRefreshKey(state: PagingState<Int, TVSeries>): Int? {
-        return state.anchorPosition?.let { anchorPosition ->
-            val anchorPage = state.closestPageToPosition(anchorPosition)
-            anchorPage?.prevKey?.plus(1) ?: anchorPage?.nextKey?.minus(1)
-        }
+        return getTVSeriesRefreshKey(state)
     }
 }
Index: app/src/main/java/com/example/movieplayer/ui/search/tvseries/SearchTVSeriesViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/search/tvseries/SearchTVSeriesViewModel.kt b/app/src/main/java/com/example/movieplayer/ui/tvseries/search/SearchTVSeriesViewModel.kt
rename from app/src/main/java/com/example/movieplayer/ui/search/tvseries/SearchTVSeriesViewModel.kt
rename to app/src/main/java/com/example/movieplayer/ui/tvseries/search/SearchTVSeriesViewModel.kt
--- a/app/src/main/java/com/example/movieplayer/ui/search/tvseries/SearchTVSeriesViewModel.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/tvseries/search/SearchTVSeriesViewModel.kt	(date 1662583477429)
@@ -1,33 +1,31 @@
-package com.example.movieplayer.ui.search.tvseries
+package com.example.movieplayer.ui.tvseries.search
 
+import androidx.lifecycle.SavedStateHandle
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
 import androidx.paging.Pager
 import androidx.paging.PagingConfig
 import androidx.paging.PagingData
 import androidx.paging.cachedIn
-import com.example.movieplayer.feature.fetchtvseries.data.SearchTVSeriesPagingSource
 import com.example.movieplayer.feature.fetchtvseries.data.TVSeries
 import com.example.movieplayer.feature.fetchtvseries.domain.SearchTVSeriesUseCase
 import dagger.hilt.android.lifecycle.HiltViewModel
 import kotlinx.coroutines.ExperimentalCoroutinesApi
 import kotlinx.coroutines.flow.Flow
-import kotlinx.coroutines.flow.MutableStateFlow
 import kotlinx.coroutines.flow.debounce
-import kotlinx.coroutines.flow.filter
 import kotlinx.coroutines.flow.flatMapLatest
 import javax.inject.Inject
 
 @HiltViewModel
 class SearchTVSeriesViewModel @Inject constructor(
-    private val searchTVSeriesUseCase: SearchTVSeriesUseCase
+    private val searchTVSeriesUseCase: SearchTVSeriesUseCase,
+    private val savedStateHandle: SavedStateHandle
 ) : ViewModel() {
 
-    private val queryFlow = MutableStateFlow("")
+    private val queryFlow = savedStateHandle.getStateFlow("tv_query", "")
 
     @OptIn(ExperimentalCoroutinesApi::class)
     val querySearchResults = queryFlow
-        .filter { query -> query.length > 3 }
         .debounce(300)
         .flatMapLatest { query ->
             getSearchResultStream(query)
@@ -44,6 +42,6 @@
     }
 
     fun onQueryChanged(query: String) {
-        queryFlow.value = query
+        savedStateHandle["tv_query"] = query
     }
 }
Index: app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/SearchMoviesPagingSource.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/SearchMoviesPagingSource.kt b/app/src/main/java/com/example/movieplayer/ui/movies/search/SearchMoviesPagingSource.kt
rename from app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/SearchMoviesPagingSource.kt
rename to app/src/main/java/com/example/movieplayer/ui/movies/search/SearchMoviesPagingSource.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/data/SearchMoviesPagingSource.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/search/SearchMoviesPagingSource.kt	(date 1662548388031)
@@ -1,17 +1,25 @@
-package com.example.movieplayer.feature.fetchmovies.data
+package com.example.movieplayer.ui.movies.search
 
 import android.util.Log
 import androidx.paging.PagingSource
 import androidx.paging.PagingState
 import com.example.movieplayer.common.Result
-import com.example.movieplayer.common.getNextPageKey
+import com.example.movieplayer.feature.fetchmovies.data.Movie
 import com.example.movieplayer.feature.fetchmovies.domain.SearchMoviesUseCase
+import com.example.movieplayer.ui.common.TooShortQueryException
+import com.example.movieplayer.ui.common.getNextPageKey
+import com.example.movieplayer.ui.movies.getMovieRefreshKey
 
 class SearchMoviesPagingSource(
     val searchMoviesUseCase: SearchMoviesUseCase,
     private val query: String
 ) : PagingSource<Int, Movie>() {
+
     override suspend fun load(params: LoadParams<Int>): LoadResult<Int, Movie> {
+        if (query.length <= 3) {
+            return LoadResult.Error(TooShortQueryException)
+        }
+
         val nextPageNumber = params.key ?: 1
         val response = searchMoviesUseCase(query, nextPageNumber)
         return when (response) {
@@ -30,9 +38,6 @@
     }
 
     override fun getRefreshKey(state: PagingState<Int, Movie>): Int? {
-        return state.anchorPosition?.let { anchorPosition ->
-            val anchorPage = state.closestPageToPosition(anchorPosition)
-            anchorPage?.prevKey?.plus(1) ?: anchorPage?.nextKey?.minus(1)
-        }
-    }
-}
\ No newline at end of file
+        return getMovieRefreshKey(state)
+    }
+}
Index: app/src/main/java/com/example/movieplayer/ui/search/movies/SearchMoviesFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/search/movies/SearchMoviesFragment.kt b/app/src/main/java/com/example/movieplayer/ui/movies/search/SearchMoviesFragment.kt
rename from app/src/main/java/com/example/movieplayer/ui/search/movies/SearchMoviesFragment.kt
rename to app/src/main/java/com/example/movieplayer/ui/movies/search/SearchMoviesFragment.kt
--- a/app/src/main/java/com/example/movieplayer/ui/search/movies/SearchMoviesFragment.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/search/SearchMoviesFragment.kt	(date 1662727128766)
@@ -1,7 +1,8 @@
-package com.example.movieplayer.ui.search.movies
+package com.example.movieplayer.ui.movies.search
 
 import android.os.Bundle
 import android.view.View
+import androidx.activity.addCallback
 import androidx.core.view.doOnPreDraw
 import androidx.core.widget.doAfterTextChanged
 import androidx.fragment.app.Fragment
@@ -13,12 +14,16 @@
 import com.example.movieplayer.MainActivity
 import com.example.movieplayer.R
 import com.example.movieplayer.databinding.SearchListBinding
+import com.example.movieplayer.feature.fetchmovies.data.Movie
+import com.example.movieplayer.ui.common.getErrorState
+import com.example.movieplayer.ui.common.updateState
 import com.example.movieplayer.ui.movies.MovieAdapter
 import com.example.movieplayer.utils.hideKeyboard
 import com.example.movieplayer.utils.showKeyboard
 import com.google.android.material.transition.MaterialElevationScale
 import dagger.hilt.android.AndroidEntryPoint
 import kotlinx.coroutines.flow.collectLatest
+import kotlinx.coroutines.flow.distinctUntilChangedBy
 import kotlinx.coroutines.launch
 
 @AndroidEntryPoint
@@ -26,45 +31,51 @@
 
     private val viewModel: SearchMoviesViewModel by viewModels()
 
+    companion object {
+        const val DURATION = 300L
+    }
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         exitTransition = MaterialElevationScale(false).apply {
-            duration = 300
+            duration = DURATION
         }
         reenterTransition = MaterialElevationScale(true).apply {
-            duration = 300
+            duration = DURATION
         }
     }
 
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
 
+        requireActivity().onBackPressedDispatcher.addCallback(viewLifecycleOwner) {
+            (requireActivity() as MainActivity).searchEditText.setText("")
+            findNavController().popBackStack()
+        }
+
         val binding: SearchListBinding = SearchListBinding.bind(requireView())
-
         binding.lifecycleOwner = viewLifecycleOwner
 
-        binding.searchRecyclerView.layoutManager = GridLayoutManager(context, 2)
+        val activity = activity as? MainActivity
+        val actionBar = activity?.supportActionBar
+        actionBar?.title = null
 
         val movieAdapter = MovieAdapter { itemView, movie ->
-            val extras = FragmentNavigatorExtras(
-                itemView to getString(R.string.movie_card_detail_transition_name)
-            )
-            findNavController().navigate(
-                SearchMoviesFragmentDirections.actionSearchMoviesFragmentToMovieDetailsFragment(
-                    movie
-                ),
-                extras
-            )
+            navigateToMovieDetails(itemView, movie)
         }
+        binding.searchRecyclerView.layoutManager = GridLayoutManager(context, 2)
         binding.searchRecyclerView.adapter = movieAdapter
 
-        view.doOnPreDraw { startPostponedEnterTransition() }
+        movieAdapter.addLoadStateListener { states ->
+            if (states.getErrorState() != null) {
+                finishTransition(view)
+            }
+        }
+        movieAdapter.addOnPagesUpdatedListener {
+            finishTransition(view)
+        }
         postponeEnterTransition()
 
-        val activity = activity as? MainActivity
-        val actionBar = activity?.supportActionBar
-        actionBar?.title = null
-
         activity?.searchEditText?.apply {
             requestFocus()
             showKeyboard(this)
@@ -79,10 +90,41 @@
             }
         }
 
+        binding.searchRetryButton.setOnClickListener {
+            movieAdapter.retry()
+        }
+
+        viewLifecycleOwner.lifecycleScope.launch {
+            movieAdapter.loadStateFlow
+                .distinctUntilChangedBy { it.refresh }
+                .collect { loadStates ->
+                    binding.updateState(loadStates, movieAdapter)
+                }
+        }
+
         viewLifecycleOwner.lifecycleScope.launch {
             viewModel.querySearchResults.collectLatest { pagingData ->
                 movieAdapter.submitData(pagingData)
             }
         }
     }
+
+    private fun finishTransition(view: View) {
+        view.doOnPreDraw { startPostponedEnterTransition() }
+    }
+
+    private fun navigateToMovieDetails(
+        itemView: View,
+        movie: Movie
+    ) {
+        val extras = FragmentNavigatorExtras(
+            itemView to getString(R.string.movie_card_detail_transition_name)
+        )
+        findNavController().navigate(
+            SearchMoviesFragmentDirections.actionSearchMoviesFragmentToMovieDetailsFragment(
+                movie
+            ),
+            extras
+        )
+    }
 }
Index: app/src/main/java/com/example/movieplayer/utils/IntPreference.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/utils/IntPreference.kt b/app/src/main/java/com/example/movieplayer/utils/IntPreference.kt
new file mode 100644
--- /dev/null	(date 1662558990412)
+++ b/app/src/main/java/com/example/movieplayer/utils/IntPreference.kt	(date 1662558990412)
@@ -0,0 +1,20 @@
+package com.example.movieplayer.utils
+
+import android.content.SharedPreferences
+import kotlin.properties.ReadWriteProperty
+import kotlin.reflect.KProperty
+
+class IntPreference(
+    private val sharedPreferences: SharedPreferences,
+    private val key: String,
+    private val defaultValue: Int = -1
+) : ReadWriteProperty<Any, Int> {
+
+    override fun getValue(thisRef: Any, property: KProperty<*>): Int =
+        sharedPreferences.getInt(key, defaultValue)
+
+    override fun setValue(thisRef: Any, property: KProperty<*>, value: Int) =
+        sharedPreferences.edit()
+            .putInt(key, value)
+            .apply()
+}
Index: app/src/main/java/com/example/movieplayer/ui/common/Paging.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/common/Paging.kt b/app/src/main/java/com/example/movieplayer/ui/common/Paging.kt
new file mode 100644
--- /dev/null	(date 1662670441357)
+++ b/app/src/main/java/com/example/movieplayer/ui/common/Paging.kt	(date 1662670441357)
@@ -0,0 +1,47 @@
+package com.example.movieplayer.ui.common
+
+import androidx.core.view.isVisible
+import androidx.paging.CombinedLoadStates
+import androidx.paging.LoadState
+import androidx.paging.PagingDataAdapter
+import androidx.recyclerview.widget.RecyclerView
+import com.example.movieplayer.common.ApiResponse
+import com.example.movieplayer.databinding.SearchListBinding
+
+fun <T> ApiResponse<T>.getNextPageKey(): Int? = when {
+    page == null || page == 0 -> null
+    totalPages == null || totalPages == 0 -> null
+    page + 1 <= totalPages -> page + 1
+    else -> null
+}
+
+fun CombinedLoadStates.getErrorState(): LoadState.Error? = when {
+    prepend is LoadState.Error -> prepend as LoadState.Error
+    append is LoadState.Error -> append as LoadState.Error
+    refresh is LoadState.Error -> refresh as LoadState.Error
+    else -> null
+}
+
+fun <T : Any, VH : RecyclerView.ViewHolder> SearchListBinding.updateState(
+    loadStates: CombinedLoadStates,
+    adapter: PagingDataAdapter<T, VH>
+) {
+    val isLoading = loadStates.source.refresh is LoadState.Loading
+    val hasError = loadStates.source.refresh is LoadState.Error
+    val isListEmpty = loadStates.isListEmpty(adapter)
+    val tooShortQuery = loadStates.isQueryTooShort()
+
+    searchRecyclerView.isVisible = !isLoading && !hasError
+    searchProgressBar.isVisible = isLoading && !tooShortQuery
+    connectionError.isVisible = hasError && !tooShortQuery
+    searchEmptyStateMessage.isVisible = tooShortQuery
+    searchEmptyListMessage.isVisible = isListEmpty && !tooShortQuery
+}
+
+private fun <T : Any, VH : RecyclerView.ViewHolder> CombinedLoadStates.isListEmpty(
+    adapter: PagingDataAdapter<T, VH>
+) = refresh is LoadState.NotLoading && adapter.itemCount == 0
+
+private fun CombinedLoadStates.isQueryTooShort(): Boolean {
+    return (source.refresh as? LoadState.Error)?.error == TooShortQueryException
+}
Index: app/src/main/java/com/example/movieplayer/ui/movies/MoviesPagingCommon.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/movies/MoviesPagingCommon.kt b/app/src/main/java/com/example/movieplayer/ui/movies/MoviesPagingCommon.kt
new file mode 100644
--- /dev/null	(date 1661802585108)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/MoviesPagingCommon.kt	(date 1661802585108)
@@ -0,0 +1,11 @@
+package com.example.movieplayer.ui.movies
+
+import androidx.paging.PagingState
+import com.example.movieplayer.feature.fetchmovies.data.Movie
+
+fun getMovieRefreshKey(state: PagingState<Int, Movie>): Int? {
+    return state.anchorPosition?.let { anchorPosition ->
+        val anchorPage = state.closestPageToPosition(anchorPosition)
+        anchorPage?.prevKey?.plus(1) ?: anchorPage?.nextKey?.minus(1)
+    }
+}
Index: app/src/main/java/com/example/movieplayer/ui/tvseries/details/TVSeriesDetailsBindingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/tvseries/details/TVSeriesDetailsBindingAdapter.kt b/app/src/main/java/com/example/movieplayer/ui/tvseries/details/TVSeriesDetailsBindingAdapter.kt
new file mode 100644
--- /dev/null	(date 1661968897861)
+++ b/app/src/main/java/com/example/movieplayer/ui/tvseries/details/TVSeriesDetailsBindingAdapter.kt	(date 1661968897861)
@@ -0,0 +1,49 @@
+package com.example.movieplayer.ui.tvseries.details
+
+import android.widget.AdapterView
+import android.widget.AutoCompleteTextView
+import androidx.databinding.BindingAdapter
+import androidx.recyclerview.widget.RecyclerView
+import com.example.movieplayer.feature.fetchtvepisodes.data.Episode
+import com.example.movieplayer.feature.fetchtvseriesdetails.data.Genre
+import com.example.movieplayer.feature.fetchtvseriesdetails.data.Season
+import com.google.android.material.chip.Chip
+import com.google.android.material.chip.ChipGroup
+
+@BindingAdapter("listEpisodesData")
+fun bindEpisodeRecyclerView(recyclerView: RecyclerView, data: List<Episode>) {
+    val adapter = recyclerView.adapter as EpisodeAdapter
+    adapter.submitList(data)
+}
+
+@BindingAdapter("seasons")
+fun bindSeasonAutoCompleteTextView(
+    autoCompleteTextView: AutoCompleteTextView,
+    data: List<Season>?
+) {
+    val context = autoCompleteTextView.context
+    val adapter = SeasonArrayAdapter(context, data ?: emptyList())
+    autoCompleteTextView.setAdapter(adapter)
+}
+
+@BindingAdapter("android:text", "filter")
+fun AutoCompleteTextView.updateFilter(text: String?, filter: Boolean) {
+    this.setText(text, filter)
+}
+
+@BindingAdapter("onItemClicked")
+fun setOnItemClickListener(view: AutoCompleteTextView, listener: AdapterView.OnItemClickListener) {
+    view.onItemClickListener = listener
+}
+
+@BindingAdapter("genres")
+fun bindGenres(chipGroup: ChipGroup, data: List<Genre>?) {
+    val context = chipGroup.context
+    data?.forEach { genre ->
+        chipGroup.addView(
+            Chip(context).apply {
+                text = genre.name
+            }
+        )
+    }
+}
Index: app/src/main/java/com/example/movieplayer/ui/common/Preferences.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/common/Preferences.kt b/app/src/main/java/com/example/movieplayer/ui/common/Preferences.kt
new file mode 100644
--- /dev/null	(date 1662559033657)
+++ b/app/src/main/java/com/example/movieplayer/ui/common/Preferences.kt	(date 1662559033657)
@@ -0,0 +1,17 @@
+package com.example.movieplayer.ui.common
+
+import android.content.SharedPreferences
+import com.example.movieplayer.utils.IntPreference
+import javax.inject.Inject
+
+class Preferences @Inject constructor(
+    sharedPreferences: SharedPreferences
+) {
+    var movieOrder: Int by IntPreference(sharedPreferences, MOVIE_ORDER_KEY)
+    var tvOrder: Int by IntPreference(sharedPreferences, TV_ORDER_KEY)
+
+    companion object {
+        const val MOVIE_ORDER_KEY = "MOVIE_ORDER_KEY"
+        const val TV_ORDER_KEY = "TV_ORDER_KEY"
+    }
+}
Index: app/src/main/java/com/example/movieplayer/ui/movies/details/MovieDetailsBindingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/movies/details/MovieDetailsBindingAdapter.kt b/app/src/main/java/com/example/movieplayer/ui/movies/details/MovieDetailsBindingAdapter.kt
new file mode 100644
--- /dev/null	(date 1661968671425)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/details/MovieDetailsBindingAdapter.kt	(date 1661968671425)
@@ -0,0 +1,18 @@
+package com.example.movieplayer.ui.movies.details
+
+import androidx.databinding.BindingAdapter
+import androidx.recyclerview.widget.RecyclerView
+import com.example.movieplayer.feature.fetchcredits.data.Cast
+import com.example.movieplayer.feature.fetchcredits.data.Crew
+
+@BindingAdapter("listCrewData")
+fun bindCrewRecyclerView(recyclerView: RecyclerView, data: List<Crew>?) {
+    val adapter = recyclerView.adapter as CrewAdapter
+    adapter.submitList(data)
+}
+
+@BindingAdapter("listCastData")
+fun bindCastRecyclerView(recyclerView: RecyclerView, data: List<Cast>?) {
+    val adapter = recyclerView.adapter as CastAdapter
+    adapter.submitList(data)
+}
Index: app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesMenuProvider.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesMenuProvider.kt b/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesMenuProvider.kt
new file mode 100644
--- /dev/null	(date 1661859148959)
+++ b/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesMenuProvider.kt	(date 1661859148959)
@@ -0,0 +1,20 @@
+package com.example.movieplayer.ui.tvseries
+
+import android.view.Menu
+import android.view.MenuInflater
+import android.view.MenuItem
+import androidx.core.view.MenuProvider
+import com.example.movieplayer.R
+
+class TVSeriesMenuProvider(private val onSearchClicked: () -> Unit) : MenuProvider {
+    override fun onCreateMenu(menu: Menu, menuInflater: MenuInflater) {
+        menuInflater.inflate(R.menu.appbar_menu, menu)
+    }
+
+    override fun onMenuItemSelected(menuItem: MenuItem): Boolean {
+        when (menuItem.itemId) {
+            R.id.search_item -> onSearchClicked()
+        }
+        return true
+    }
+}
Index: app/src/main/java/com/example/movieplayer/di/CoreModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.di\n\nimport com.example.movieplayer.common.AppConfig\nimport com.squareup.moshi.Moshi\nimport dagger.Module\nimport dagger.Provides\nimport dagger.hilt.InstallIn\nimport dagger.hilt.components.SingletonComponent\nimport okhttp3.OkHttpClient\nimport okhttp3.logging.HttpLoggingInterceptor\n\n@Module\n@InstallIn(SingletonComponent::class)\nobject CoreModule {\n\n    @Provides\n    fun provideAppConfig(): AppConfig {\n        return AppConfig(\n            baseUrl = \"https://api.themoviedb.org/3/\",\n            apiKey = \"c33ec9fdf85b0eb9fb900af22206b062\"\n        )\n    }\n\n    @Provides\n    fun provideMoshi(): Moshi = Moshi.Builder()\n        .build()\n\n    @Provides\n    fun provideHttpLoggingInterceptor(): HttpLoggingInterceptor = HttpLoggingInterceptor().apply {\n        level = HttpLoggingInterceptor.Level.BODY\n    }\n\n    @Provides\n    fun provideOkHttpClient(interceptor: HttpLoggingInterceptor): OkHttpClient =\n        OkHttpClient.Builder().addInterceptor(\n            interceptor\n        ).build()\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/di/CoreModule.kt b/app/src/main/java/com/example/movieplayer/di/CoreModule.kt
--- a/app/src/main/java/com/example/movieplayer/di/CoreModule.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/di/CoreModule.kt	(date 1662726647046)
@@ -1,13 +1,19 @@
 package com.example.movieplayer.di
 
+import android.content.Context
+import android.content.Context.MODE_PRIVATE
+import android.content.SharedPreferences
+import com.example.movieplayer.BuildConfig
 import com.example.movieplayer.common.AppConfig
 import com.squareup.moshi.Moshi
 import dagger.Module
 import dagger.Provides
 import dagger.hilt.InstallIn
+import dagger.hilt.android.qualifiers.ApplicationContext
 import dagger.hilt.components.SingletonComponent
 import okhttp3.OkHttpClient
 import okhttp3.logging.HttpLoggingInterceptor
+import javax.inject.Singleton
 
 @Module
 @InstallIn(SingletonComponent::class)
@@ -17,7 +23,7 @@
     fun provideAppConfig(): AppConfig {
         return AppConfig(
             baseUrl = "https://api.themoviedb.org/3/",
-            apiKey = "c33ec9fdf85b0eb9fb900af22206b062"
+            apiKey = BuildConfig.API_KEY
         )
     }
 
@@ -35,4 +41,10 @@
         OkHttpClient.Builder().addInterceptor(
             interceptor
         ).build()
+
+    @Singleton
+    @Provides
+    fun provideSharedPreferences(@ApplicationContext appContext: Context): SharedPreferences {
+        return appContext.getSharedPreferences("app_preference", MODE_PRIVATE)
+    }
 }
Index: app/src/main/java/com/example/movieplayer/ui/common/BindingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/common/BindingAdapter.kt b/app/src/main/java/com/example/movieplayer/ui/common/BindingAdapter.kt
new file mode 100644
--- /dev/null	(date 1661969005398)
+++ b/app/src/main/java/com/example/movieplayer/ui/common/BindingAdapter.kt	(date 1661969005398)
@@ -0,0 +1,22 @@
+package com.example.movieplayer.ui.common
+
+import android.view.View
+import android.widget.ImageView
+import androidx.databinding.BindingAdapter
+import coil.load
+import com.example.movieplayer.R
+
+@BindingAdapter("imageUrl")
+fun setImageUrl(imageView: ImageView, url: String?) {
+    val baseUrl = "https://image.tmdb.org/t/p/w500"
+    val imageUri = "$baseUrl$url"
+    imageView.load(imageUri) {
+        placeholder(R.drawable.placeholder_image)
+        error(R.drawable.error_image)
+    }
+}
+
+@BindingAdapter("android:visibility")
+fun setVisibility(view: View, value: Boolean) {
+    view.visibility = if (value) View.VISIBLE else View.GONE
+}
Index: app/src/main/java/com/example/movieplayer/ui/common/TooShortQueryException.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/common/TooShortQueryException.kt b/app/src/main/java/com/example/movieplayer/ui/common/TooShortQueryException.kt
new file mode 100644
--- /dev/null	(date 1662311225190)
+++ b/app/src/main/java/com/example/movieplayer/ui/common/TooShortQueryException.kt	(date 1662311225190)
@@ -0,0 +1,3 @@
+package com.example.movieplayer.ui.common
+
+object TooShortQueryException : Exception()
Index: app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesPagingCommon.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesPagingCommon.kt b/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesPagingCommon.kt
new file mode 100644
--- /dev/null	(date 1661802798640)
+++ b/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesPagingCommon.kt	(date 1661802798640)
@@ -0,0 +1,11 @@
+package com.example.movieplayer.ui.tvseries
+
+import androidx.paging.PagingState
+import com.example.movieplayer.feature.fetchtvseries.data.TVSeries
+
+fun getTVSeriesRefreshKey(state: PagingState<Int, TVSeries>): Int? {
+    return state.anchorPosition?.let { anchorPosition ->
+        val anchorPage = state.closestPageToPosition(anchorPosition)
+        anchorPage?.prevKey?.plus(1) ?: anchorPage?.nextKey?.minus(1)
+    }
+}
Index: app/src/main/res/navigation/movies_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/movies_graph.xml b/app/src/main/res/navigation/movies_graph.xml
new file mode 100644
--- /dev/null	(date 1662627106007)
+++ b/app/src/main/res/navigation/movies_graph.xml	(date 1662627106007)
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="utf-8"?>
+<navigation xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/moviesGraph"
+    app:startDestination="@id/movieFragment">
+
+    <fragment
+        android:id="@+id/movieFragment"
+        android:name="com.example.movieplayer.ui.movies.MovieFragment"
+        android:label="@string/movies_label"
+        tools:layout="@layout/movie_list">
+
+        <action
+            android:id="@+id/action_movieFragment_to_movieDetailsFragment"
+            app:destination="@id/movieDetailsFragment" />
+
+        <action
+            android:id="@+id/action_movieFragment_to_searchMoviesFragment"
+            app:destination="@id/searchMoviesFragment" />
+
+    </fragment>
+
+    <fragment
+        android:id="@+id/movieDetailsFragment"
+        android:name="com.example.movieplayer.ui.movies.details.MovieDetailsFragment"
+        android:label="@string/movie_details_label"
+        tools:layout="@layout/movie_details">
+
+        <argument
+            android:name="selectedMovie"
+            app:argType="com.example.movieplayer.feature.fetchmovies.data.Movie" />
+
+    </fragment>
+
+    <fragment
+        android:id="@+id/searchMoviesFragment"
+        android:name="com.example.movieplayer.ui.movies.search.SearchMoviesFragment"
+        android:label="@string/search_movies_label">
+
+        <action
+            android:id="@+id/action_searchMoviesFragment_to_movieDetailsFragment"
+            app:destination="@id/movieDetailsFragment" />
+
+    </fragment>
+
+</navigation>
\ No newline at end of file
Index: app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.ui.tvseries\n\nimport android.content.Context\nimport android.content.SharedPreferences\nimport android.os.Bundle\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport androidx.core.content.edit\nimport androidx.core.view.MenuProvider\nimport androidx.core.view.doOnPreDraw\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Lifecycle\nimport androidx.lifecycle.lifecycleScope\nimport androidx.navigation.fragment.FragmentNavigatorExtras\nimport androidx.navigation.fragment.findNavController\nimport androidx.recyclerview.widget.GridLayoutManager\nimport com.example.movieplayer.R\nimport com.example.movieplayer.databinding.TvseriesListBinding\nimport com.example.movieplayer.feature.fetchtvseries.domain.TVOrder\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.flow.collectLatest\nimport kotlinx.coroutines.launch\n\n@AndroidEntryPoint\nclass TVSeriesFragment : Fragment(R.layout.tvseries_list) {\n\n    private val viewModel: TVSeriesViewModel by viewModels()\n    private val sharedPreferences: SharedPreferences? by lazy {\n        activity?.getPreferences(Context.MODE_PRIVATE)\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n        val binding: TvseriesListBinding = TvseriesListBinding.bind(requireView())\n\n        val tvSeriesAdapter = TVSeriesAdapter { itemView, tvSeries ->\n            val extras = FragmentNavigatorExtras(\n                itemView to getString(R.string.tv_card_detail_transition_name)\n            )\n\n            findNavController().navigate(\n                TVSeriesFragmentDirections.actionTVSeriesFragmentToTVSeriesDetailsFragment(tvSeries),\n                extras\n            )\n        }\n        binding.tvSeriesRecyclerView.adapter = tvSeriesAdapter\n        binding.tvSeriesRecyclerView.layoutManager = GridLayoutManager(context, 2)\n        binding.viewModel = viewModel\n        binding.lifecycleOwner = viewLifecycleOwner\n\n        val savedOrder = restoreOrder()\n        val selectedChipId = when (savedOrder) {\n            TVOrder.TOP_RATED -> R.id.topRated\n            TVOrder.ON_THE_AIR -> R.id.on_the_air\n            TVOrder.AIRING_TODAY -> R.id.airing_today\n            else -> R.id.popular\n        }\n        binding.chipGroup.check(selectedChipId)\n        viewModel.onOrderChanged(savedOrder)\n\n        binding.chipGroup.setOnCheckedChangeListener { _, checkedId ->\n            val order = when (checkedId) {\n                R.id.topRated -> TVOrder.TOP_RATED\n                R.id.airing_today -> TVOrder.AIRING_TODAY\n                R.id.on_the_air -> TVOrder.ON_THE_AIR\n                else -> TVOrder.POPULAR\n            }\n\n            viewModel.onOrderChanged(order)\n            saveOrder(order)\n        }\n\n        viewLifecycleOwner.lifecycleScope.launch {\n            viewModel.tvSeries.collectLatest { pagingData ->\n                tvSeriesAdapter.submitData(pagingData)\n            }\n        }\n        activity?.addMenuProvider(\n            object : MenuProvider {\n                override fun onCreateMenu(menu: Menu, menuInflater: MenuInflater) {\n                    menuInflater.inflate(R.menu.appbar_menu, menu)\n                }\n\n                override fun onMenuItemSelected(menuItem: MenuItem): Boolean {\n                    when (menuItem.itemId) {\n                        R.id.search_item -> findNavController().navigate(\n                            TVSeriesFragmentDirections.actionTVSeriesFragmentToSearchTvSeriesFragment()\n                        )\n                    }\n                    return true\n                }\n            },\n            viewLifecycleOwner,\n            Lifecycle.State.RESUMED\n        )\n\n        tvSeriesAdapter.addOnPagesUpdatedListener {\n            view.doOnPreDraw { startPostponedEnterTransition() }\n        }\n\n        postponeEnterTransition()\n    }\n\n    private fun saveOrder(order: TVOrder) {\n        sharedPreferences?.edit {\n            putInt(getString(R.string.saved_order_key), order.ordinal)\n        }\n    }\n\n    private fun restoreOrder(): TVOrder {\n        val value =\n            sharedPreferences?.getInt(getString(R.string.saved_order_key), TVOrder.POPULAR.ordinal)\n        return TVOrder.from(value)\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesFragment.kt b/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesFragment.kt
--- a/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesFragment.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesFragment.kt	(date 1662558679843)
@@ -1,17 +1,11 @@
 package com.example.movieplayer.ui.tvseries
 
-import android.content.Context
-import android.content.SharedPreferences
 import android.os.Bundle
-import android.view.Menu
-import android.view.MenuInflater
-import android.view.MenuItem
 import android.view.View
-import androidx.core.content.edit
-import androidx.core.view.MenuProvider
 import androidx.core.view.doOnPreDraw
+import androidx.core.view.isVisible
 import androidx.fragment.app.Fragment
-import androidx.fragment.app.viewModels
+import androidx.hilt.navigation.fragment.hiltNavGraphViewModels
 import androidx.lifecycle.Lifecycle
 import androidx.lifecycle.lifecycleScope
 import androidx.navigation.fragment.FragmentNavigatorExtras
@@ -19,101 +13,128 @@
 import androidx.recyclerview.widget.GridLayoutManager
 import com.example.movieplayer.R
 import com.example.movieplayer.databinding.TvseriesListBinding
+import com.example.movieplayer.feature.fetchtvseries.data.TVSeries
 import com.example.movieplayer.feature.fetchtvseries.domain.TVOrder
+import com.example.movieplayer.ui.common.Preferences
+import com.example.movieplayer.ui.common.getErrorState
 import dagger.hilt.android.AndroidEntryPoint
 import kotlinx.coroutines.flow.collectLatest
 import kotlinx.coroutines.launch
+import javax.inject.Inject
 
 @AndroidEntryPoint
 class TVSeriesFragment : Fragment(R.layout.tvseries_list) {
 
-    private val viewModel: TVSeriesViewModel by viewModels()
-    private val sharedPreferences: SharedPreferences? by lazy {
-        activity?.getPreferences(Context.MODE_PRIVATE)
-    }
+    @Inject
+    lateinit var preferences: Preferences
+
+    private val viewModel: TVSeriesViewModel by hiltNavGraphViewModels(R.id.tvGraph)
 
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
 
         val binding: TvseriesListBinding = TvseriesListBinding.bind(requireView())
+        binding.viewModel = viewModel
+        binding.lifecycleOwner = viewLifecycleOwner
+
+        postponeEnterTransition()
 
         val tvSeriesAdapter = TVSeriesAdapter { itemView, tvSeries ->
-            val extras = FragmentNavigatorExtras(
-                itemView to getString(R.string.tv_card_detail_transition_name)
-            )
-
-            findNavController().navigate(
-                TVSeriesFragmentDirections.actionTVSeriesFragmentToTVSeriesDetailsFragment(tvSeries),
-                extras
-            )
+            navigateToTvSeriesDetails(itemView, tvSeries)
         }
         binding.tvSeriesRecyclerView.adapter = tvSeriesAdapter
         binding.tvSeriesRecyclerView.layoutManager = GridLayoutManager(context, 2)
-        binding.viewModel = viewModel
-        binding.lifecycleOwner = viewLifecycleOwner
+
+        tvSeriesAdapter.addLoadStateListener { states ->
+            if (states.getErrorState() != null) {
+                finishTransition(view)
+            }
+        }
+
+        tvSeriesAdapter.addOnPagesUpdatedListener {
+            finishTransition(view)
+        }
 
         val savedOrder = restoreOrder()
-        val selectedChipId = when (savedOrder) {
-            TVOrder.TOP_RATED -> R.id.topRated
-            TVOrder.ON_THE_AIR -> R.id.on_the_air
-            TVOrder.AIRING_TODAY -> R.id.airing_today
-            else -> R.id.popular
-        }
+        val selectedChipId = getSelectedChipId(savedOrder)
         binding.chipGroup.check(selectedChipId)
         viewModel.onOrderChanged(savedOrder)
 
-        binding.chipGroup.setOnCheckedChangeListener { _, checkedId ->
-            val order = when (checkedId) {
-                R.id.topRated -> TVOrder.TOP_RATED
-                R.id.airing_today -> TVOrder.AIRING_TODAY
-                R.id.on_the_air -> TVOrder.ON_THE_AIR
-                else -> TVOrder.POPULAR
-            }
+        binding.chipGroup.setOnCheckedStateChangeListener { _, checkedIds ->
+            onOrderChanged(checkedIds)
+        }
+
+        binding.retryButton.setOnClickListener {
+            tvSeriesAdapter.retry()
+        }
+
+        addMenuProvider()
+
+        viewLifecycleOwner.lifecycleScope.launch {
+            viewModel.tvSeries.collectLatest { pagingData ->
+                tvSeriesAdapter.submitData(pagingData)
+            }
+        }
+        viewLifecycleOwner.lifecycleScope.launch {
+            tvSeriesAdapter.loadStateFlow.collectLatest { loadStates ->
+                binding.errorView.isVisible = loadStates.getErrorState() != null
+            }
+        }
+    }
+
+    private fun onOrderChanged(checkedIds: List<Int>) {
+        val order = when (checkedIds.first()) {
+            R.id.topRated -> TVOrder.TOP_RATED
+            R.id.airingToday -> TVOrder.AIRING_TODAY
+            R.id.onTheAir -> TVOrder.ON_THE_AIR
+            else -> TVOrder.POPULAR
+        }
 
-            viewModel.onOrderChanged(order)
-            saveOrder(order)
-        }
+        viewModel.onOrderChanged(order)
+        saveOrder(order)
+    }
 
-        viewLifecycleOwner.lifecycleScope.launch {
-            viewModel.tvSeries.collectLatest { pagingData ->
-                tvSeriesAdapter.submitData(pagingData)
-            }
-        }
+    private fun finishTransition(view: View) {
+        view.doOnPreDraw { startPostponedEnterTransition() }
+    }
+
+    private fun addMenuProvider() {
         activity?.addMenuProvider(
-            object : MenuProvider {
-                override fun onCreateMenu(menu: Menu, menuInflater: MenuInflater) {
-                    menuInflater.inflate(R.menu.appbar_menu, menu)
-                }
-
-                override fun onMenuItemSelected(menuItem: MenuItem): Boolean {
-                    when (menuItem.itemId) {
-                        R.id.search_item -> findNavController().navigate(
-                            TVSeriesFragmentDirections.actionTVSeriesFragmentToSearchTvSeriesFragment()
-                        )
-                    }
-                    return true
-                }
+            TVSeriesMenuProvider {
+                findNavController().navigate(
+                    TVSeriesFragmentDirections.actionTVSeriesFragmentToSearchTvSeriesFragment()
+                )
             },
             viewLifecycleOwner,
-            Lifecycle.State.RESUMED
+            Lifecycle.State.STARTED
         )
+    }
 
-        tvSeriesAdapter.addOnPagesUpdatedListener {
-            view.doOnPreDraw { startPostponedEnterTransition() }
+    private fun getSelectedChipId(savedOrder: TVOrder) =
+        when (savedOrder) {
+            TVOrder.TOP_RATED -> R.id.topRated
+            TVOrder.ON_THE_AIR -> R.id.onTheAir
+            TVOrder.AIRING_TODAY -> R.id.airingToday
+            else -> R.id.popular
         }
 
-        postponeEnterTransition()
+    private fun navigateToTvSeriesDetails(
+        itemView: View,
+        tvSeries: TVSeries
+    ) {
+        val extras = FragmentNavigatorExtras(
+            itemView to getString(R.string.tv_card_detail_transition_name)
+        )
+
+        findNavController().navigate(
+            TVSeriesFragmentDirections.actionTVSeriesFragmentToTVSeriesDetailsFragment(tvSeries),
+            extras
+        )
     }
 
     private fun saveOrder(order: TVOrder) {
-        sharedPreferences?.edit {
-            putInt(getString(R.string.saved_order_key), order.ordinal)
-        }
+        preferences.tvOrder = order.ordinal
     }
 
-    private fun restoreOrder(): TVOrder {
-        val value =
-            sharedPreferences?.getInt(getString(R.string.saved_order_key), TVOrder.POPULAR.ordinal)
-        return TVOrder.from(value)
-    }
+    private fun restoreOrder(): TVOrder = TVOrder.from(preferences.tvOrder)
 }
Index: app/src/main/res/navigation/tv_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/tv_graph.xml b/app/src/main/res/navigation/tv_graph.xml
new file mode 100644
--- /dev/null	(date 1662627213764)
+++ b/app/src/main/res/navigation/tv_graph.xml	(date 1662627213764)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<navigation xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/tvGraph"
+    app:startDestination="@id/TVSeriesFragment">
+
+    <fragment
+        android:id="@+id/TVSeriesFragment"
+        android:name="com.example.movieplayer.ui.tvseries.TVSeriesFragment"
+        android:label="@string/tv_series_label">
+
+        <action
+            android:id="@+id/action_TVSeriesFragment_to_searchTvSeriesFragment"
+            app:destination="@id/searchTvSeriesFragment" />
+
+        <action
+            android:id="@+id/action_TVSeriesFragment_to_TVSeriesDetailsFragment"
+            app:destination="@id/TVSeriesDetailsFragment" />
+
+    </fragment>
+
+    <fragment
+        android:id="@+id/searchTvSeriesFragment"
+        android:name="com.example.movieplayer.ui.tvseries.search.SearchTVSeriesFragment"
+        android:label="@string/search_tv_label">
+
+        <action
+            android:id="@+id/action_searchTvSeriesFragment_to_TVSeriesDetailsFragment"
+            app:destination="@id/TVSeriesDetailsFragment" />
+
+    </fragment>
+
+    <fragment
+        android:id="@+id/TVSeriesDetailsFragment"
+        android:name="com.example.movieplayer.ui.tvseries.details.TVSeriesDetailsFragment"
+        android:label="@string/tv_details_label">
+
+        <argument
+            android:name="selectedTVSeries"
+            app:argType="com.example.movieplayer.feature.fetchtvseries.data.TVSeries" />
+
+    </fragment>
+
+</navigation>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_baseline_broken_image_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_broken_image_24.xml b/app/src/main/res/drawable/ic_baseline_broken_image_24.xml
new file mode 100644
--- /dev/null	(date 1662638346786)
+++ b/app/src/main/res/drawable/ic_baseline_broken_image_24.xml	(date 1662638346786)
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#646464"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M21,5v6.59l-3,-3.01 -4,4.01 -4,-4 -4,4 -3,-3.01L3,5c0,-1.1 0.9,-2 2,-2h14c1.1,0 2,0.9 2,2zM18,11.42l3,3.01L21,19c0,1.1 -0.9,2 -2,2L5,21c-1.1,0 -2,-0.9 -2,-2v-6.58l3,2.99 4,-4 4,4 4,-3.99z"/>
+</vector>
Index: app/src/main/java/com/example/movieplayer/ui/movies/MovieMenuProvider.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/movies/MovieMenuProvider.kt b/app/src/main/java/com/example/movieplayer/ui/movies/MovieMenuProvider.kt
new file mode 100644
--- /dev/null	(date 1661876539896)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/MovieMenuProvider.kt	(date 1661876539896)
@@ -0,0 +1,20 @@
+package com.example.movieplayer.ui.movies
+
+import android.view.Menu
+import android.view.MenuInflater
+import android.view.MenuItem
+import androidx.core.view.MenuProvider
+import com.example.movieplayer.R
+
+class MovieMenuProvider(private val onSearchClicked: () -> Unit) : MenuProvider {
+    override fun onCreateMenu(menu: Menu, menuInflater: MenuInflater) {
+        menuInflater.inflate(R.menu.appbar_menu, menu)
+    }
+
+    override fun onMenuItemSelected(menuItem: MenuItem): Boolean {
+        when (menuItem.itemId) {
+            R.id.search_item -> onSearchClicked()
+        }
+        return true
+    }
+}
Index: app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/TVSeriesPagingSource.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/TVSeriesPagingSource.kt b/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesPagingSource.kt
rename from app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/TVSeriesPagingSource.kt
rename to app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesPagingSource.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/data/TVSeriesPagingSource.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/tvseries/TVSeriesPagingSource.kt	(date 1661802798656)
@@ -1,9 +1,10 @@
-package com.example.movieplayer.feature.fetchtvseries.data
+package com.example.movieplayer.ui.tvseries
 
 import android.util.Log
 import androidx.paging.PagingSource
 import androidx.paging.PagingState
 import com.example.movieplayer.common.Result
+import com.example.movieplayer.feature.fetchtvseries.data.TVSeries
 import com.example.movieplayer.feature.fetchtvseries.domain.FetchTVSeriesUseCase
 import com.example.movieplayer.feature.fetchtvseries.domain.TVOrder
 
@@ -11,6 +12,7 @@
     val fetchTVSeriesUseCase: FetchTVSeriesUseCase,
     private val tvOrder: TVOrder
 ) : PagingSource<Int, TVSeries>() {
+
     override suspend fun load(params: LoadParams<Int>): LoadResult<Int, TVSeries> {
         val nextPageNumber = params.key ?: 1
         val response = fetchTVSeriesUseCase(tvOrder, nextPageNumber)
@@ -28,10 +30,6 @@
     }
 
     override fun getRefreshKey(state: PagingState<Int, TVSeries>): Int? {
-        return state.anchorPosition?.let { anchorPosition ->
-            val anchorPage = state.closestPageToPosition(anchorPosition)
-            anchorPage?.prevKey?.plus(1) ?: anchorPage?.nextKey?.minus(1)
-
-        }
-    }
-}
\ No newline at end of file
+        return getTVSeriesRefreshKey(state)
+    }
+}
Index: app/src/main/res/layout/search_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <data>\n\n    </data>\n\n    <androidx.constraintlayout.widget.ConstraintLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/searchRecyclerView\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"0dp\"\n            android:paddingStart=\"8dp\"\n            android:paddingEnd=\"8dp\"\n            android:clipChildren=\"false\"\n            android:clipToPadding=\"false\"\n            android:transitionGroup=\"true\"\n            android:visibility=\"visible\"\n            app:layoutManager=\"androidx.recyclerview.widget.GridLayoutManager\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:layout_constraintVertical_bias=\"0.0\"\n            tools:listitem=\"@layout/movie_item\" />\n\n    </androidx.constraintlayout.widget.ConstraintLayout>\n\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/search_list.xml b/app/src/main/res/layout/search_list.xml
--- a/app/src/main/res/layout/search_list.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/layout/search_list.xml	(date 1662670528653)
@@ -16,10 +16,10 @@
             android:id="@+id/searchRecyclerView"
             android:layout_width="0dp"
             android:layout_height="0dp"
-            android:paddingStart="8dp"
-            android:paddingEnd="8dp"
             android:clipChildren="false"
             android:clipToPadding="false"
+            android:paddingStart="8dp"
+            android:paddingEnd="8dp"
             android:transitionGroup="true"
             android:visibility="visible"
             app:layoutManager="androidx.recyclerview.widget.GridLayoutManager"
@@ -30,6 +30,103 @@
             app:layout_constraintVertical_bias="0.0"
             tools:listitem="@layout/movie_item" />
 
+        <ProgressBar
+            android:id="@+id/searchProgressBar"
+            style="?android:attr/progressBarStyle"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:visibility="gone"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintLeft_toLeftOf="parent"
+            app:layout_constraintRight_toRightOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+        <LinearLayout
+            android:id="@+id/connectionError"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:visibility="gone"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintLeft_toLeftOf="parent"
+            app:layout_constraintRight_toRightOf="parent"
+            app:layout_constraintTop_toTopOf="parent">
+
+            <TextView
+                android:id="@+id/searchConnectionErrorMessage"
+                style="@style/EmptyStateText"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:padding="8dp"
+                android:text="@string/connection_error_message" />
+
+            <Button
+                android:id="@+id/searchRetryButton"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginTop="8dp"
+                android:text="@string/retry_button_label" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:id="@+id/searchEmptyStateMessage"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:visibility="gone"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintLeft_toLeftOf="parent"
+            app:layout_constraintRight_toRightOf="parent"
+            app:layout_constraintTop_toTopOf="parent">
+
+            <ImageView
+                android:id="@+id/searchEmptyStateImage"
+                style="@style/EmptyStateIcon"
+                android:layout_width="140dp"
+                android:layout_height="140dp"
+                android:layout_gravity="center"
+                android:src="@drawable/ic_baseline_search_24" />
+
+            <TextView
+                android:id="@+id/searchEmptyStateTextView"
+                style="@style/EmptyStateText"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/search_empty_state" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:id="@+id/searchEmptyListMessage"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:visibility="gone"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintLeft_toLeftOf="parent"
+            app:layout_constraintRight_toRightOf="parent"
+            app:layout_constraintTop_toTopOf="parent">
+
+            <ImageView
+                android:id="@+id/searchEmptyListImage"
+                style="@style/EmptyStateIcon"
+                android:layout_width="140dp"
+                android:layout_height="140dp"
+                android:layout_gravity="center"
+                android:src="@drawable/ic_baseline_list_24" />
+
+            <TextView
+                android:id="@+id/searchEmptyListTextView"
+                style="@style/EmptyStateText"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/search_empty_list_message" />
+
+        </LinearLayout>
+
     </androidx.constraintlayout.widget.ConstraintLayout>
 
 </layout>
\ No newline at end of file
Index: app/src/main/java/com/example/movieplayer/ui/movies/MovieAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.ui.movies\n\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.paging.PagingDataAdapter\nimport androidx.recyclerview.widget.DiffUtil\nimport com.example.movieplayer.feature.fetchmovies.data.Movie\n\nclass MovieAdapter(private val onClick: (view: View, movie: Movie) -> Unit) :\n    PagingDataAdapter<Movie, MovieViewHolder>(MovieDiffCallback()) {\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MovieViewHolder {\n        return MovieViewHolder.from(parent)\n    }\n\n    override fun onBindViewHolder(holder: MovieViewHolder, position: Int) {\n        val item = getItem(position)\n        if (item != null) {\n            holder.bind(onClick, item)\n        }\n    }\n}\n\nclass MovieDiffCallback : DiffUtil.ItemCallback<Movie>() {\n\n    override fun areItemsTheSame(\n        oldItem: Movie,\n        newItem: Movie\n    ): Boolean {\n        return oldItem.id == newItem.id\n    }\n\n    override fun areContentsTheSame(\n        oldItem: Movie,\n        newItem: Movie\n    ): Boolean {\n        return oldItem == newItem\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/movies/MovieAdapter.kt b/app/src/main/java/com/example/movieplayer/ui/movies/MovieAdapter.kt
--- a/app/src/main/java/com/example/movieplayer/ui/movies/MovieAdapter.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/MovieAdapter.kt	(date 1661791639108)
@@ -6,8 +6,9 @@
 import androidx.recyclerview.widget.DiffUtil
 import com.example.movieplayer.feature.fetchmovies.data.Movie
 
-class MovieAdapter(private val onClick: (view: View, movie: Movie) -> Unit) :
-    PagingDataAdapter<Movie, MovieViewHolder>(MovieDiffCallback()) {
+class MovieAdapter(
+    private val onClick: (view: View, movie: Movie) -> Unit
+) : PagingDataAdapter<Movie, MovieViewHolder>(MovieDiffCallback()) {
 
     override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MovieViewHolder {
         return MovieViewHolder.from(parent)
Index: app/src/main/res/layout/movie_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <data>\n\n        <import type=\"kotlin.jvm.functions.Function2\" />\n\n        <import type=\"kotlin.Unit\" />\n\n        <variable\n            name=\"movie\"\n            type=\"com.example.movieplayer.feature.fetchmovies.data.Movie\" />\n        <variable\n            name=\"onClick\"\n            type=\"Function2&lt;android.view.View, com.example.movieplayer.feature.fetchmovies.data.Movie, Unit>\" />\n    </data>\n\n    <com.google.android.material.card.MaterialCardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:id=\"@+id/item\"\n        xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"8dp\"\n        android:onClick=\"@{(view) -> onClick.invoke(view, movie)}\"\n        android:transitionName=\"@{@string/movie_card_transition_name(movie.id)}\"\n        card_view:cardCornerRadius=\"16dp\"\n        card_view:cardElevation=\"16dp\">\n\n        <androidx.constraintlayout.widget.ConstraintLayout\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\">\n\n            <TextView\n                android:id=\"@+id/title\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"8dp\"\n                android:paddingStart=\"16dp\"\n                android:paddingBottom=\"8dp\"\n                android:paddingEnd=\"16dp\"\n                android:text=\"@{movie.title}\"\n                android:textAlignment=\"center\"\n                android:textAppearance=\"?attr/textAppearanceSubtitle2\"\n                app:layout_constraintBottom_toBottomOf=\"parent\"\n                app:layout_constraintEnd_toEndOf=\"parent\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintTop_toBottomOf=\"@+id/poster\"\n                tools:text=\"Avatar\" />\n\n            <ImageView\n                android:id=\"@+id/poster\"\n                android:layout_width=\"200dp\"\n                android:layout_height=\"300dp\"\n                android:scaleType=\"centerCrop\"\n                app:imageUrl=\"@{movie.posterPath}\"\n                app:layout_constraintEnd_toEndOf=\"parent\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintTop_toTopOf=\"parent\"\n                tools:srcCompat=\"@drawable/poster\" />\n\n        </androidx.constraintlayout.widget.ConstraintLayout>\n\n    </com.google.android.material.card.MaterialCardView>\n\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/movie_item.xml b/app/src/main/res/layout/movie_item.xml
--- a/app/src/main/res/layout/movie_item.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/layout/movie_item.xml	(date 1662667482170)
@@ -11,14 +11,15 @@
         <variable
             name="movie"
             type="com.example.movieplayer.feature.fetchmovies.data.Movie" />
+
         <variable
             name="onClick"
             type="Function2&lt;android.view.View, com.example.movieplayer.feature.fetchmovies.data.Movie, Unit>" />
     </data>
 
     <com.google.android.material.card.MaterialCardView xmlns:android="http://schemas.android.com/apk/res/android"
-        android:id="@+id/item"
         xmlns:card_view="http://schemas.android.com/apk/res-auto"
+        android:id="@+id/item"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_margin="8dp"
@@ -37,8 +38,8 @@
                 android:layout_height="wrap_content"
                 android:layout_marginTop="8dp"
                 android:paddingStart="16dp"
-                android:paddingBottom="8dp"
                 android:paddingEnd="16dp"
+                android:paddingBottom="8dp"
                 android:text="@{movie.title}"
                 android:textAlignment="center"
                 android:textAppearance="?attr/textAppearanceSubtitle2"
Index: app/src/main/res/layout/season_list_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<TextView android:id=\"@+id/list_popup_text\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:padding=\"16dp\"\n    android:ellipsize=\"end\"\n    android:maxLines=\"1\"\n    android:textAppearance=\"?attr/textAppearanceSubtitle1\"\n    xmlns:android=\"http://schemas.android.com/apk/res/android\" />\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/season_list_item.xml b/app/src/main/res/layout/season_list_item.xml
--- a/app/src/main/res/layout/season_list_item.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/layout/season_list_item.xml	(date 1662667482178)
@@ -1,10 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
-<TextView android:id="@+id/list_popup_text"
+<TextView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/list_popup_text"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-    android:padding="16dp"
     android:ellipsize="end"
     android:maxLines="1"
-    android:textAppearance="?attr/textAppearanceSubtitle1"
-    xmlns:android="http://schemas.android.com/apk/res/android" />
+    android:padding="16dp"
+    android:textAppearance="?attr/textAppearanceSubtitle1" />
 
Index: app/src/main/java/com/example/movieplayer/feature/fetchcredits/domain/FetchMovieCreditsUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchcredits.domain\n\nimport com.example.movieplayer.common.AppConfig\nimport com.example.movieplayer.common.Result\nimport com.example.movieplayer.common.performRequest\nimport com.example.movieplayer.feature.fetchcredits.data.Cast\nimport com.example.movieplayer.feature.fetchcredits.data.Credits\nimport com.example.movieplayer.feature.fetchcredits.data.CreditsService\nimport com.example.movieplayer.feature.fetchcredits.data.Crew\nimport javax.inject.Inject\n\ninterface FetchMovieCreditsUseCase {\n\n    suspend operator fun invoke(\n        id: Int\n    ): Result<Credits>\n}\n\nclass FetchMovieCreditsUseCaseImpl @Inject constructor(\n    private val creditsService: CreditsService,\n    private val appConfig: AppConfig\n) : FetchMovieCreditsUseCase {\n    override suspend fun invoke(id: Int): Result<Credits> {\n        val result = performRequest { creditsService.getMovieCredits(id, appConfig.apiKey) }\n\n        return when (result) {\n            is Result.Success -> Result.Success(\n                result.data.copy(\n                    crew = result.data.crew\n                        .groupBy { person -> person.id }\n                        .map { entry ->\n                            val firstRole = entry.value.first()\n                            Crew(\n                                id = entry.key,\n                                department = entry.value.joinToString { it.department },\n                                name = firstRole.name,\n                                popularity = firstRole.popularity,\n                                path = firstRole.path,\n                                job = entry.value.joinToString { it.job }\n                            )\n                        },\n                    cast = result.data.cast\n                        .groupBy { person -> person.id }\n                        .map { entry ->\n                            val firstRole = entry.value.first()\n                            Cast(\n                                id = entry.key,\n                                name = firstRole.name,\n                                popularity = firstRole.popularity,\n                                path = firstRole.path,\n                                character = entry.value.joinToString { it.character }\n                            )\n                        }\n                )\n            )\n            is Result.Error -> result\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchcredits/domain/FetchMovieCreditsUseCase.kt b/app/src/main/java/com/example/movieplayer/feature/fetchcredits/domain/FetchMovieCreditsUseCase.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchcredits/domain/FetchMovieCreditsUseCase.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchcredits/domain/FetchMovieCreditsUseCase.kt	(date 1661968414923)
@@ -20,40 +20,51 @@
     private val creditsService: CreditsService,
     private val appConfig: AppConfig
 ) : FetchMovieCreditsUseCase {
+
     override suspend fun invoke(id: Int): Result<Credits> {
-        val result = performRequest { creditsService.getMovieCredits(id, appConfig.apiKey) }
+        val result = performRequest {
+            creditsService.getMovieCredits(id, appConfig.apiKey)
+        }
 
         return when (result) {
             is Result.Success -> Result.Success(
                 result.data.copy(
-                    crew = result.data.crew
-                        .groupBy { person -> person.id }
-                        .map { entry ->
-                            val firstRole = entry.value.first()
-                            Crew(
-                                id = entry.key,
-                                department = entry.value.joinToString { it.department },
-                                name = firstRole.name,
-                                popularity = firstRole.popularity,
-                                path = firstRole.path,
-                                job = entry.value.joinToString { it.job }
-                            )
-                        },
-                    cast = result.data.cast
-                        .groupBy { person -> person.id }
-                        .map { entry ->
-                            val firstRole = entry.value.first()
-                            Cast(
-                                id = entry.key,
-                                name = firstRole.name,
-                                popularity = firstRole.popularity,
-                                path = firstRole.path,
-                                character = entry.value.joinToString { it.character }
-                            )
-                        }
-                )
+                    crew = getTransformedCrewList(result),
+                    cast = getTransformedCastList(result)
+                )
+            )
+            is Result.Error -> result
+        }
+    }
+
+    private fun getTransformedCastList(
+        result: Result.Success<Credits>
+    ) = result.data.cast
+        .groupBy { person -> person.id }
+        .map { entry ->
+            val firstRole = entry.value.first()
+            Cast(
+                id = entry.key,
+                name = firstRole.name,
+                popularity = firstRole.popularity,
+                path = firstRole.path,
+                character = entry.value.joinToString { it.character }
+            )
+        }
+
+    private fun getTransformedCrewList(
+        result: Result.Success<Credits>
+    ) = result.data.crew
+        .groupBy { person -> person.id }
+        .map { entry ->
+            val firstRole = entry.value.first()
+            Crew(
+                id = entry.key,
+                department = entry.value.joinToString { it.department },
+                name = firstRole.name,
+                popularity = firstRole.popularity,
+                path = firstRole.path,
+                job = entry.value.joinToString { it.job }
             )
-            is Result.Error -> result
         }
-    }
 }
Index: app/src/main/res/layout/movie_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <data>\n\n        <variable\n            name=\"viewModel\"\n            type=\"com.example.movieplayer.ui.movies.MovieViewModel\" />\n\n    </data>\n\n    <androidx.constraintlayout.widget.ConstraintLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:paddingStart=\"16dp\"\n        android:paddingEnd=\"16dp\"\n        android:paddingBottom=\"16dp\">\n\n        <com.google.android.material.chip.ChipGroup\n            android:id=\"@+id/chip_group\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            app:layout_constraintBottom_toTopOf=\"@id/recycler_view\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:singleSelection=\"true\">\n\n            <com.google.android.material.chip.Chip\n                android:id=\"@+id/popular\"\n                style=\"@style/ChipChoice\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:checked=\"true\"\n                android:color=\"?attr/colorPrimaryVariant\"\n                android:text=\"@string/movie_order_popular\" />\n\n            <com.google.android.material.chip.Chip\n                android:id=\"@+id/top_rated\"\n                style=\"@style/ChipChoice\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:color=\"?attr/colorPrimaryVariant\"\n                android:text=\"@string/movie_order_top_rated\" />\n\n            <com.google.android.material.chip.Chip\n                android:id=\"@+id/upcoming\"\n                style=\"@style/ChipChoice\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:color=\"?attr/colorPrimaryVariant\"\n                android:text=\"@string/movie_order_upcoming\" />\n\n            <com.google.android.material.chip.Chip\n                android:id=\"@+id/now_playing\"\n                style=\"@style/ChipChoice\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:color=\"?attr/colorPrimaryVariant\"\n                android:text=\"@string/movie_order_now_playing\" />\n\n        </com.google.android.material.chip.ChipGroup>\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/recycler_view\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"0dp\"\n            android:layout_marginTop=\"8dp\"\n            android:visibility=\"visible\"\n            app:layoutManager=\"androidx.recyclerview.widget.GridLayoutManager\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@id/chip_group\"\n            app:layout_constraintVertical_bias=\"0.0\"\n            tools:listitem=\"@layout/movie_item\" />\n\n    </androidx.constraintlayout.widget.ConstraintLayout>\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/movie_list.xml b/app/src/main/res/layout/movie_list.xml
--- a/app/src/main/res/layout/movie_list.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/layout/movie_list.xml	(date 1662667113424)
@@ -14,16 +14,16 @@
 
     <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:paddingStart="16dp"
-        android:paddingEnd="16dp"
-        android:paddingBottom="16dp">
+        android:layout_height="match_parent">
 
         <com.google.android.material.chip.ChipGroup
-            android:id="@+id/chip_group"
+            android:id="@+id/chipGroup"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            app:layout_constraintBottom_toTopOf="@id/recycler_view"
+            android:paddingStart="16dp"
+            android:paddingEnd="16dp"
+            app:checkedChip="@+id/popular"
+            app:layout_constraintBottom_toTopOf="@id/movieRecyclerView"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintStart_toStartOf="parent"
             app:layout_constraintTop_toTopOf="parent"
@@ -34,16 +34,13 @@
                 style="@style/ChipChoice"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:checked="true"
-                android:color="?attr/colorPrimaryVariant"
                 android:text="@string/movie_order_popular" />
 
             <com.google.android.material.chip.Chip
-                android:id="@+id/top_rated"
+                android:id="@+id/topRated"
                 style="@style/ChipChoice"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:color="?attr/colorPrimaryVariant"
                 android:text="@string/movie_order_top_rated" />
 
             <com.google.android.material.chip.Chip
@@ -51,32 +48,65 @@
                 style="@style/ChipChoice"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:color="?attr/colorPrimaryVariant"
                 android:text="@string/movie_order_upcoming" />
 
             <com.google.android.material.chip.Chip
-                android:id="@+id/now_playing"
+                android:id="@+id/nowPlaying"
                 style="@style/ChipChoice"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:color="?attr/colorPrimaryVariant"
                 android:text="@string/movie_order_now_playing" />
 
         </com.google.android.material.chip.ChipGroup>
 
         <androidx.recyclerview.widget.RecyclerView
-            android:id="@+id/recycler_view"
+            android:id="@+id/movieRecyclerView"
             android:layout_width="0dp"
             android:layout_height="0dp"
-            android:layout_marginTop="8dp"
-            android:visibility="visible"
+            android:clipChildren="false"
+            android:clipToPadding="false"
+            android:paddingStart="8dp"
+            android:paddingEnd="8dp"
+            android:transitionGroup="true"
             app:layoutManager="androidx.recyclerview.widget.GridLayoutManager"
-            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintBottom_toTopOf="@id/errorView"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@id/chip_group"
+            app:layout_constraintTop_toBottomOf="@id/chipGroup"
             app:layout_constraintVertical_bias="0.0"
             tools:listitem="@layout/movie_item" />
 
+        <LinearLayout
+            android:id="@+id/errorView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="16dp"
+            android:visibility="gone"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/movieRecyclerView"
+            tools:visibility="visible">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:padding="8dp"
+                android:text="@string/connection_error_message"
+                android:textAlignment="center"
+                android:textAppearance="?attr/textAppearanceSubtitle2"
+                tools:text="Error" />
+
+            <Button
+                android:id="@+id/retryButton"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_horizontal"
+                android:paddingTop="8dp"
+                android:text="@string/retry_button_label" />
+
+        </LinearLayout>
+
     </androidx.constraintlayout.widget.ConstraintLayout>
 </layout>
\ No newline at end of file
Index: app/src/main/java/com/example/movieplayer/ui/details/tvseries/SeasonArrayAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/details/tvseries/SeasonArrayAdapter.kt b/app/src/main/java/com/example/movieplayer/ui/tvseries/details/SeasonArrayAdapter.kt
rename from app/src/main/java/com/example/movieplayer/ui/details/tvseries/SeasonArrayAdapter.kt
rename to app/src/main/java/com/example/movieplayer/ui/tvseries/details/SeasonArrayAdapter.kt
--- a/app/src/main/java/com/example/movieplayer/ui/details/tvseries/SeasonArrayAdapter.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/tvseries/details/SeasonArrayAdapter.kt	(date 1661801948129)
@@ -1,4 +1,4 @@
-package com.example.movieplayer.ui.details.tvseries
+package com.example.movieplayer.ui.tvseries.details
 
 import android.content.Context
 import android.view.LayoutInflater
Index: app/src/main/java/com/example/movieplayer/feature/fetchtvseriesdetails/domain/FetchTVSeriesDetailsUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchtvseriesdetails.domain\n\nimport com.example.movieplayer.common.AppConfig\nimport com.example.movieplayer.common.Result\nimport com.example.movieplayer.common.performRequest\nimport com.example.movieplayer.feature.fetchtvseriesdetails.data.TVSeriesDetails\nimport com.example.movieplayer.feature.fetchtvseriesdetails.data.TVSeriesDetailsService\nimport javax.inject.Inject\n\ninterface FetchTVSeriesDetailsUseCase {\n\n    suspend operator fun invoke(\n        tvId: Int\n    ): Result<TVSeriesDetails>\n}\n\nclass FetchTVSeriesDetailsUseCaseImpl @Inject constructor(\n    private val tvSeriesDetailsService: TVSeriesDetailsService,\n    private val appConfig: AppConfig\n) : FetchTVSeriesDetailsUseCase {\n    override suspend fun invoke(tvId: Int): Result<TVSeriesDetails> {\n        return performRequest { tvSeriesDetailsService.getTVSeriesDetails(tvId, appConfig.apiKey) }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchtvseriesdetails/domain/FetchTVSeriesDetailsUseCase.kt b/app/src/main/java/com/example/movieplayer/feature/fetchtvseriesdetails/domain/FetchTVSeriesDetailsUseCase.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchtvseriesdetails/domain/FetchTVSeriesDetailsUseCase.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchtvseriesdetails/domain/FetchTVSeriesDetailsUseCase.kt	(date 1661800427627)
@@ -18,6 +18,7 @@
     private val tvSeriesDetailsService: TVSeriesDetailsService,
     private val appConfig: AppConfig
 ) : FetchTVSeriesDetailsUseCase {
+
     override suspend fun invoke(tvId: Int): Result<TVSeriesDetails> {
         return performRequest { tvSeriesDetailsService.getTVSeriesDetails(tvId, appConfig.apiKey) }
     }
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">MovieApp</string>\n    <string name=\"title\">Title</string>\n    <string name=\"movie_order_popular\">Popular</string>\n    <string name=\"movie_order_top_rated\">Top Rated</string>\n    <string name=\"movie_order_upcoming\">Upcoming</string>\n    <string name=\"movie_order_now_playing\">Now playing</string>\n    <string name=\"saved_order_key\">saved_order_key</string>\n    <string name=\"title_activity_main2222222\">MainActivity</string>\n    <string name=\"title_home\">Home</string>\n    <string name=\"title_dashboard\">Dashboard</string>\n    <string name=\"title_notifications\">Notifications</string>\n    <string name=\"people\">People</string>\n    <string name=\"tv_series\">TV Series</string>\n    <string name=\"home\">Home</string>\n    <string name=\"movie_details\">Movie details</string>\n    <string name=\"search\">Search</string>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/values/strings.xml	(date 1662666977795)
@@ -6,13 +6,30 @@
     <string name="movie_order_upcoming">Upcoming</string>
     <string name="movie_order_now_playing">Now playing</string>
     <string name="saved_order_key">saved_order_key</string>
-    <string name="title_activity_main2222222">MainActivity</string>
-    <string name="title_home">Home</string>
-    <string name="title_dashboard">Dashboard</string>
-    <string name="title_notifications">Notifications</string>
-    <string name="people">People</string>
-    <string name="tv_series">TV Series</string>
+    <string name="tv_series_label">TV Series</string>
     <string name="home">Home</string>
-    <string name="movie_details">Movie details</string>
+    <string name="movie_details_label">Details</string>
     <string name="search">Search</string>
+    <string name="episodes_count">%s Episodes</string>
+    <string name="tv_card_transition_name">tv_card_%1$s</string>
+    <string name="tv_card_detail_transition_name">tv_card_detail</string>
+    <string name="movies_title">Movies</string>
+    <string name="tv_order_popular">Popular</string>
+    <string name="tv_order_top_rated">Top Rated</string>
+    <string name="tv_order_airing_today">Airing Today</string>
+    <string name="tv_order_on_the_air">On The Air</string>
+    <string name="movie_card_transition_name">movie_card_%1$s</string>
+    <string name="movie_card_detail_transition_name">movie_card_detail</string>
+    <string name="episode_number">Episode %s</string>
+    <string name="cast">Cast</string>
+    <string name="crew">Crew</string>
+    <string name="error">Error</string>
+    <string name="retry_button_label">Retry</string>
+    <string name="search_empty_state">Enter more than 3 characters to search.</string>
+    <string name="search_empty_list_message">No result. Try adjusting your search to find what you are looking for.</string>
+    <string name="tv_details_label">Details</string>
+    <string name="search_movies_label">Search Movies</string>
+    <string name="movies_label">Movies</string>
+    <string name="search_tv_label">Search Tv Series</string>
+    <string name="connection_error_message">Whoops! We\'re having difficulty connecting to the server. Check your connection or try again later.</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/movieplayer/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer\n\nimport android.os.Bundle\nimport android.widget.EditText\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.core.view.isVisible\nimport androidx.databinding.DataBindingUtil\nimport androidx.navigation.fragment.NavHostFragment\nimport androidx.navigation.ui.AppBarConfiguration\nimport androidx.navigation.ui.setupWithNavController\nimport com.example.movieplayer.databinding.ActivityMainBinding\nimport dagger.hilt.android.AndroidEntryPoint\n\n@AndroidEntryPoint\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var binding: ActivityMainBinding\n    val searchEditText: EditText\n        get() = binding.searchEditFrame\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        binding = DataBindingUtil.setContentView(\n            this,\n            R.layout.activity_main\n        )\n\n        val navHostFragment =\n            supportFragmentManager.findFragmentById(R.id.myNavHostFragment) as NavHostFragment\n        val navController = navHostFragment.navController\n        binding.bottomNavigation.setupWithNavController(navController)\n\n        navController.addOnDestinationChangedListener { _, destination, _ ->\n            binding.bottomNavigation.isVisible =\n                destination.id != R.id.movieDetailsFragment && destination.id != R.id.TVSeriesDetailsFragment\n            binding.searchEditFrame.isVisible =\n                destination.id == R.id.searchMoviesFragment || destination.id == R.id.searchTvSeriesFragment\n            binding.searchEditFrame.setText(\"\")\n        }\n        val appBarConfiguration = AppBarConfiguration(\n            setOf(\n                R.id.movieFragment,\n                R.id.TVSeriesFragment\n            )\n        )\n\n        setSupportActionBar(binding.topAppBar)\n        binding.topAppBar.setupWithNavController(navController, appBarConfiguration)\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/MainActivity.kt b/app/src/main/java/com/example/movieplayer/MainActivity.kt
--- a/app/src/main/java/com/example/movieplayer/MainActivity.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/MainActivity.kt	(date 1662654479296)
@@ -5,8 +5,10 @@
 import androidx.appcompat.app.AppCompatActivity
 import androidx.core.view.isVisible
 import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavController
 import androidx.navigation.fragment.NavHostFragment
 import androidx.navigation.ui.AppBarConfiguration
+import androidx.navigation.ui.navigateUp
 import androidx.navigation.ui.setupWithNavController
 import com.example.movieplayer.databinding.ActivityMainBinding
 import dagger.hilt.android.AndroidEntryPoint
@@ -18,6 +20,9 @@
     val searchEditText: EditText
         get() = binding.searchEditFrame
 
+    private lateinit var appBarConfiguration: AppBarConfiguration
+    private lateinit var navController: NavController
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
 
@@ -26,19 +31,12 @@
             R.layout.activity_main
         )
 
-        val navHostFragment =
-            supportFragmentManager.findFragmentById(R.id.myNavHostFragment) as NavHostFragment
-        val navController = navHostFragment.navController
-        binding.bottomNavigation.setupWithNavController(navController)
+        val navHostFragment = supportFragmentManager.findFragmentById(
+            R.id.myNavHostFragment
+        ) as NavHostFragment
+        navController = navHostFragment.navController
 
-        navController.addOnDestinationChangedListener { _, destination, _ ->
-            binding.bottomNavigation.isVisible =
-                destination.id != R.id.movieDetailsFragment && destination.id != R.id.TVSeriesDetailsFragment
-            binding.searchEditFrame.isVisible =
-                destination.id == R.id.searchMoviesFragment || destination.id == R.id.searchTvSeriesFragment
-            binding.searchEditFrame.setText("")
-        }
-        val appBarConfiguration = AppBarConfiguration(
+        appBarConfiguration = AppBarConfiguration(
             setOf(
                 R.id.movieFragment,
                 R.id.TVSeriesFragment
@@ -47,5 +45,24 @@
 
         setSupportActionBar(binding.topAppBar)
         binding.topAppBar.setupWithNavController(navController, appBarConfiguration)
+        binding.topAppBar.setNavigationOnClickListener {
+            onBackPressedDispatcher.onBackPressed()
+        }
+        binding.bottomNavigation.setupWithNavController(navController)
+
+        navController.addOnDestinationChangedListener { _, destination, _ ->
+            binding.bottomNavigation.isVisible = destination.id in listOf(
+                R.id.movieFragment,
+                R.id.TVSeriesFragment
+            )
+            binding.searchEditFrame.isVisible = destination.id in listOf(
+                R.id.searchMoviesFragment,
+                R.id.searchTvSeriesFragment
+            )
+        }
+    }
+
+    override fun onSupportNavigateUp(): Boolean {
+        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()
     }
 }
Index: app/src/main/java/com/example/movieplayer/ui/details/movie/MovieDetailsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/details/movie/MovieDetailsFragment.kt b/app/src/main/java/com/example/movieplayer/ui/movies/details/MovieDetailsFragment.kt
rename from app/src/main/java/com/example/movieplayer/ui/details/movie/MovieDetailsFragment.kt
rename to app/src/main/java/com/example/movieplayer/ui/movies/details/MovieDetailsFragment.kt
--- a/app/src/main/java/com/example/movieplayer/ui/details/movie/MovieDetailsFragment.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/details/MovieDetailsFragment.kt	(date 1662579192642)
@@ -1,4 +1,4 @@
-package com.example.movieplayer.ui.details.movie
+package com.example.movieplayer.ui.movies.details
 
 import android.graphics.Color
 import android.os.Bundle
@@ -18,6 +18,10 @@
     private val viewModel: MovieDetailsViewModel by viewModels()
     private val args: MovieDetailsFragmentArgs by navArgs()
 
+    companion object {
+        const val DURATION = 300L
+    }
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
 
@@ -25,7 +29,7 @@
             drawingViewId = R.id.myNavHostFragment
             scrimColor = Color.TRANSPARENT
             setAllContainerColors(requireContext().themeColor(R.attr.colorSurface))
-            duration = 300
+            duration = DURATION
         }
     }
 
@@ -33,12 +37,13 @@
         super.onViewCreated(view, savedInstanceState)
 
         val binding: MovieDetailsBinding = MovieDetailsBinding.bind(requireView())
+        val movie = args.selectedMovie
+
         binding.viewModel = viewModel
         binding.lifecycleOwner = viewLifecycleOwner
         binding.castRecyclerView.adapter = CastAdapter()
         binding.crewRecyclerView.adapter = CrewAdapter()
 
-        val movie = args.selectedMovie
         viewModel.fetchCredits(movie.id)
     }
 }
Index: app/src/main/java/com/example/movieplayer/ui/detail/CastAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/detail/CastAdapter.kt b/app/src/main/java/com/example/movieplayer/ui/movies/details/CastAdapter.kt
rename from app/src/main/java/com/example/movieplayer/ui/detail/CastAdapter.kt
rename to app/src/main/java/com/example/movieplayer/ui/movies/details/CastAdapter.kt
--- a/app/src/main/java/com/example/movieplayer/ui/detail/CastAdapter.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/details/CastAdapter.kt	(date 1661801796104)
@@ -1,4 +1,4 @@
-package com.example.movieplayer.ui.detail
+package com.example.movieplayer.ui.movies.details
 
 import android.view.LayoutInflater
 import android.view.ViewGroup
Index: app/src/main/java/com/example/movieplayer/ui/detail/CrewAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/detail/CrewAdapter.kt b/app/src/main/java/com/example/movieplayer/ui/movies/details/CrewAdapter.kt
rename from app/src/main/java/com/example/movieplayer/ui/detail/CrewAdapter.kt
rename to app/src/main/java/com/example/movieplayer/ui/movies/details/CrewAdapter.kt
--- a/app/src/main/java/com/example/movieplayer/ui/detail/CrewAdapter.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/details/CrewAdapter.kt	(date 1661801796112)
@@ -1,4 +1,4 @@
-package com.example.movieplayer.ui.detail
+package com.example.movieplayer.ui.movies.details
 
 import android.view.LayoutInflater
 import android.view.ViewGroup
Index: app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/FetchMoviesUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchmovies.domain\n\nimport com.example.movieplayer.common.ApiResponse\nimport com.example.movieplayer.common.AppConfig\nimport com.example.movieplayer.feature.fetchmovies.data.Movie\nimport com.example.movieplayer.common.Result\nimport com.example.movieplayer.common.performRequest\nimport com.example.movieplayer.feature.fetchmovies.data.MovieApiService\nimport javax.inject.Inject\n\ninterface FetchMoviesUseCase {\n\n    suspend operator fun invoke(\n        movieOrder: MovieOrder,\n        page: Int\n    ): Result<ApiResponse<Movie>>\n}\n\nclass FetchMoviesUseCaseImpl @Inject constructor(\n    private val movieApiService: MovieApiService,\n    private val appConfig: AppConfig\n) : FetchMoviesUseCase {\n\n    override suspend fun invoke(movieOrder: MovieOrder, page: Int): Result<ApiResponse<Movie>> {\n        return performRequest {\n            when (movieOrder) {\n                MovieOrder.POPULAR -> movieApiService.getPopularMovies(appConfig.apiKey, page)\n                MovieOrder.UPCOMING -> movieApiService.getUpcomingMovies(appConfig.apiKey, page)\n                MovieOrder.TOP_RATED -> movieApiService.getTopRatedMovies(appConfig.apiKey, page)\n                MovieOrder.NOW_PLAYING -> movieApiService.getNowPlayingMovies(appConfig.apiKey, page)\n            }\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/FetchMoviesUseCase.kt b/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/FetchMoviesUseCase.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/FetchMoviesUseCase.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/FetchMoviesUseCase.kt	(date 1661348892278)
@@ -2,9 +2,9 @@
 
 import com.example.movieplayer.common.ApiResponse
 import com.example.movieplayer.common.AppConfig
-import com.example.movieplayer.feature.fetchmovies.data.Movie
 import com.example.movieplayer.common.Result
 import com.example.movieplayer.common.performRequest
+import com.example.movieplayer.feature.fetchmovies.data.Movie
 import com.example.movieplayer.feature.fetchmovies.data.MovieApiService
 import javax.inject.Inject
 
@@ -27,8 +27,11 @@
                 MovieOrder.POPULAR -> movieApiService.getPopularMovies(appConfig.apiKey, page)
                 MovieOrder.UPCOMING -> movieApiService.getUpcomingMovies(appConfig.apiKey, page)
                 MovieOrder.TOP_RATED -> movieApiService.getTopRatedMovies(appConfig.apiKey, page)
-                MovieOrder.NOW_PLAYING -> movieApiService.getNowPlayingMovies(appConfig.apiKey, page)
+                MovieOrder.NOW_PLAYING -> movieApiService.getNowPlayingMovies(
+                    appConfig.apiKey,
+                    page
+                )
             }
         }
     }
-}
\ No newline at end of file
+}
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <androidx.constraintlayout.widget.ConstraintLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <com.google.android.material.appbar.AppBarLayout\n            android:id=\"@+id/appBarLayout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            app:elevation=\"0dp\"\n            app:layout_constraintTop_toTopOf=\"parent\">\n\n            <com.google.android.material.appbar.MaterialToolbar\n                android:id=\"@+id/topAppBar\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"?attr/actionBarSize\"\n                app:title=\"@string/movies_title\">\n\n                <EditText\n                    android:id=\"@+id/searchEditFrame\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:hint=\"@string/search\"\n                    android:inputType=\"text\"\n                    android:maxLines=\"1\"\n                    android:translationX=\"-16dp\"\n                    android:visibility=\"gone\" />\n\n            </com.google.android.material.appbar.MaterialToolbar>\n\n        </com.google.android.material.appbar.AppBarLayout>\n\n        <androidx.fragment.app.FragmentContainerView\n            android:id=\"@+id/myNavHostFragment\"\n            android:name=\"androidx.navigation.fragment.NavHostFragment\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            app:defaultNavHost=\"true\"\n            app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n            app:layout_constraintBottom_toTopOf=\"@id/bottomNavigation\"\n            app:layout_constraintTop_toBottomOf=\"@id/appBarLayout\"\n            app:navGraph=\"@navigation/navigation\" />\n\n        <com.google.android.material.bottomnavigation.BottomNavigationView\n            android:id=\"@+id/bottomNavigation\"\n            style=\"@style/Widget.MaterialComponents.BottomNavigationView.Colored\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:menu=\"@menu/bottom_navigation_menu\" />\n\n    </androidx.constraintlayout.widget.ConstraintLayout>\n\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1661964571977)
@@ -39,7 +39,6 @@
             android:layout_width="match_parent"
             android:layout_height="0dp"
             app:defaultNavHost="true"
-            app:layout_behavior="@string/appbar_scrolling_view_behavior"
             app:layout_constraintBottom_toTopOf="@id/bottomNavigation"
             app:layout_constraintTop_toBottomOf="@id/appBarLayout"
             app:navGraph="@navigation/navigation" />
Index: app/src/main/java/com/example/movieplayer/ui/detail/MovieDetailsViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/ui/detail/MovieDetailsViewModel.kt b/app/src/main/java/com/example/movieplayer/ui/movies/details/MovieDetailsViewModel.kt
rename from app/src/main/java/com/example/movieplayer/ui/detail/MovieDetailsViewModel.kt
rename to app/src/main/java/com/example/movieplayer/ui/movies/details/MovieDetailsViewModel.kt
--- a/app/src/main/java/com/example/movieplayer/ui/detail/MovieDetailsViewModel.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/ui/movies/details/MovieDetailsViewModel.kt	(date 1661801765236)
@@ -1,4 +1,4 @@
-package com.example.movieplayer.ui.detail
+package com.example.movieplayer.ui.movies.details
 
 import androidx.lifecycle.LiveData
 import androidx.lifecycle.MutableLiveData
@@ -16,13 +16,12 @@
 
 @HiltViewModel
 class MovieDetailsViewModel @Inject constructor(
-    private val state: SavedStateHandle,
+    state: SavedStateHandle,
     private val fetchMovieCreditsUseCase: FetchMovieCreditsUseCase
 ) : ViewModel() {
 
     private val _selectedMovie = state.getLiveData<Movie>("selectedMovie")
-    val selectedMovie: LiveData<Movie>
-        get() = _selectedMovie
+    val selectedMovie: LiveData<Movie> = _selectedMovie
 
     private val _cast = MutableLiveData<List<Cast>>()
     val cast: LiveData<List<Cast>> = _cast
Index: app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/FetchTVSeriesUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchtvseries.domain\n\nimport com.example.movieplayer.common.AppConfig\nimport com.example.movieplayer.common.ApiResponse\nimport com.example.movieplayer.common.Result\nimport com.example.movieplayer.common.performRequest\nimport com.example.movieplayer.feature.fetchtvseries.data.TVSeries\nimport com.example.movieplayer.feature.fetchtvseries.data.TVSeriesService\nimport javax.inject.Inject\n\ninterface FetchTVSeriesUseCase {\n\n    suspend operator fun invoke(\n            tvOrder: TVOrder,\n            page: Int\n    ): Result<ApiResponse<TVSeries>>\n}\n\nclass FetchTVSeriesUseCaseImpl @Inject constructor(\n    private val tvSeriesService: TVSeriesService,\n    private val appConfig: AppConfig,\n) : FetchTVSeriesUseCase {\n\n    override suspend fun invoke(tvOrder: TVOrder, page: Int): Result<ApiResponse<TVSeries>> {\n        return performRequest {\n            when(tvOrder){\n                TVOrder.POPULAR -> tvSeriesService.getPopularTVSeries(appConfig.apiKey, page)\n                TVOrder.TOP_RATED -> tvSeriesService.getTopRatedTVSeries(appConfig.apiKey, page)\n                TVOrder.AIRING_TODAY -> tvSeriesService.getAiringToday(appConfig.apiKey, page)\n                TVOrder.ON_THE_AIR -> tvSeriesService.getOnTheAir(appConfig.apiKey, page)\n            }\n        }\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/FetchTVSeriesUseCase.kt b/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/FetchTVSeriesUseCase.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/FetchTVSeriesUseCase.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/FetchTVSeriesUseCase.kt	(date 1660472206609)
@@ -1,7 +1,7 @@
 package com.example.movieplayer.feature.fetchtvseries.domain
 
-import com.example.movieplayer.common.AppConfig
 import com.example.movieplayer.common.ApiResponse
+import com.example.movieplayer.common.AppConfig
 import com.example.movieplayer.common.Result
 import com.example.movieplayer.common.performRequest
 import com.example.movieplayer.feature.fetchtvseries.data.TVSeries
@@ -11,19 +11,19 @@
 interface FetchTVSeriesUseCase {
 
     suspend operator fun invoke(
-            tvOrder: TVOrder,
-            page: Int
+        tvOrder: TVOrder,
+        page: Int
     ): Result<ApiResponse<TVSeries>>
 }
 
 class FetchTVSeriesUseCaseImpl @Inject constructor(
     private val tvSeriesService: TVSeriesService,
-    private val appConfig: AppConfig,
+    private val appConfig: AppConfig
 ) : FetchTVSeriesUseCase {
 
     override suspend fun invoke(tvOrder: TVOrder, page: Int): Result<ApiResponse<TVSeries>> {
         return performRequest {
-            when(tvOrder){
+            when (tvOrder) {
                 TVOrder.POPULAR -> tvSeriesService.getPopularTVSeries(appConfig.apiKey, page)
                 TVOrder.TOP_RATED -> tvSeriesService.getTopRatedTVSeries(appConfig.apiKey, page)
                 TVOrder.AIRING_TODAY -> tvSeriesService.getAiringToday(appConfig.apiKey, page)
@@ -32,5 +32,3 @@
         }
     }
 }
-
-
Index: app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/SearchTVSeriesUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchtvseries.domain\n\nimport com.example.movieplayer.common.ApiResponse\nimport com.example.movieplayer.common.AppConfig\nimport com.example.movieplayer.common.Result\nimport com.example.movieplayer.common.performRequest\nimport com.example.movieplayer.feature.fetchtvseries.data.TVSeries\nimport com.example.movieplayer.feature.fetchtvseries.data.TVSeriesService\nimport javax.inject.Inject\n\ninterface SearchTVSeriesUseCase {\n\n    suspend operator fun invoke(\n        query: String,\n        page: Int\n    ): Result<ApiResponse<TVSeries>>\n}\n\nclass SearchTVSeriesUseCaseImpl @Inject constructor(\n    private val tvSeriesService: TVSeriesService,\n    private val appConfig: AppConfig\n) : SearchTVSeriesUseCase {\n    override suspend fun invoke(query: String, page: Int): Result<ApiResponse<TVSeries>> {\n        return performRequest { tvSeriesService.getSearchedTVSeries(appConfig.apiKey, query, page) }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/SearchTVSeriesUseCase.kt b/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/SearchTVSeriesUseCase.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/SearchTVSeriesUseCase.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchtvseries/domain/SearchTVSeriesUseCase.kt	(date 1661800427615)
@@ -20,6 +20,7 @@
     private val tvSeriesService: TVSeriesService,
     private val appConfig: AppConfig
 ) : SearchTVSeriesUseCase {
+
     override suspend fun invoke(query: String, page: Int): Result<ApiResponse<TVSeries>> {
         return performRequest { tvSeriesService.getSearchedTVSeries(appConfig.apiKey, query, page) }
     }
Index: app/src/main/res/layout/cast_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <data>\n        <variable\n            name=\"cast\"\n            type=\"com.example.movieplayer.feature.fetchcredits.data.Cast\" />\n    </data>\n\n    <androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:padding=\"8dp\">\n\n        <ImageView\n            android:id=\"@+id/poster\"\n            android:layout_width=\"100dp\"\n            android:layout_height=\"wrap_content\"\n            android:adjustViewBounds=\"true\"\n            app:imageUrl=\"@{cast.path}\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:layout_constraintBottom_toTopOf=\"@+id/name\"\n            tools:srcCompat=\"@drawable/poster\" />\n\n        <TextView\n            android:id=\"@+id/name\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"@{cast.name}\"\n            app:layout_constraintEnd_toEndOf=\"@id/poster\"\n            app:layout_constraintStart_toStartOf=\"@id/poster\"\n            app:layout_constraintBottom_toTopOf=\"@id/character\"\n            tools:text=\"Name\" />\n\n        <TextView\n            android:id=\"@+id/character\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"@{cast.character}\"\n            app:layout_constraintEnd_toEndOf=\"@id/poster\"\n            app:layout_constraintStart_toStartOf=\"@id/poster\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            tools:text=\"Character\"/>\n\n    </androidx.constraintlayout.widget.ConstraintLayout>\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/cast_item.xml b/app/src/main/res/layout/cast_item.xml
--- a/app/src/main/res/layout/cast_item.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/layout/cast_item.xml	(date 1661461634598)
@@ -22,27 +22,29 @@
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintStart_toStartOf="parent"
             app:layout_constraintTop_toTopOf="parent"
-            app:layout_constraintBottom_toTopOf="@+id/name"
             tools:srcCompat="@drawable/poster" />
 
         <TextView
             android:id="@+id/name"
-            android:layout_width="wrap_content"
+            android:layout_width="0dp"
             android:layout_height="wrap_content"
             android:text="@{cast.name}"
+            android:textAppearance="?attr/textAppearanceBody1"
             app:layout_constraintEnd_toEndOf="@id/poster"
             app:layout_constraintStart_toStartOf="@id/poster"
-            app:layout_constraintBottom_toTopOf="@id/character"
+            app:layout_constraintTop_toBottomOf="@id/poster"
             tools:text="Name" />
 
         <TextView
             android:id="@+id/character"
-            android:layout_width="wrap_content"
+            android:layout_width="0dp"
             android:layout_height="wrap_content"
             android:text="@{cast.character}"
+            android:paddingTop="8dp"
+            android:textAppearance="?attr/textAppearanceBody2"
+            app:layout_constraintTop_toBottomOf="@+id/name"
             app:layout_constraintEnd_toEndOf="@id/poster"
             app:layout_constraintStart_toStartOf="@id/poster"
-            app:layout_constraintBottom_toBottomOf="parent"
             tools:text="Character"/>
 
     </androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/SearchMoviesUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.movieplayer.feature.fetchmovies.domain\n\nimport com.example.movieplayer.common.ApiResponse\nimport com.example.movieplayer.common.AppConfig\nimport com.example.movieplayer.common.Result\nimport com.example.movieplayer.common.performRequest\nimport com.example.movieplayer.feature.fetchmovies.data.MovieApiService\nimport com.example.movieplayer.feature.fetchmovies.data.Movie\nimport javax.inject.Inject\n\ninterface SearchMoviesUseCase {\n\n    suspend operator fun invoke(\n        query: String,\n        page: Int\n    ): Result<ApiResponse<Movie>>\n}\n\nclass SearchMoviesUseCaseImpl @Inject constructor(\n    private val movieApiService: MovieApiService,\n    private val appConfig: AppConfig\n) : SearchMoviesUseCase {\n\n    override suspend fun invoke(query: String, page: Int): Result<ApiResponse<Movie>> {\n        return performRequest { movieApiService.getSearchedMovies(appConfig.apiKey, query, page) }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/SearchMoviesUseCase.kt b/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/SearchMoviesUseCase.kt
--- a/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/SearchMoviesUseCase.kt	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/java/com/example/movieplayer/feature/fetchmovies/domain/SearchMoviesUseCase.kt	(date 1660388271575)
@@ -4,8 +4,8 @@
 import com.example.movieplayer.common.AppConfig
 import com.example.movieplayer.common.Result
 import com.example.movieplayer.common.performRequest
-import com.example.movieplayer.feature.fetchmovies.data.MovieApiService
 import com.example.movieplayer.feature.fetchmovies.data.Movie
+import com.example.movieplayer.feature.fetchmovies.data.MovieApiService
 import javax.inject.Inject
 
 interface SearchMoviesUseCase {
@@ -24,4 +24,4 @@
     override suspend fun invoke(query: String, page: Int): Result<ApiResponse<Movie>> {
         return performRequest { movieApiService.getSearchedMovies(appConfig.apiKey, query, page) }
     }
-}
\ No newline at end of file
+}
Index: app/src/main/res/layout/tvseries_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <data>\n\n        <variable\n            name=\"viewModel\"\n            type=\"com.example.movieplayer.ui.tvseries.TVSeriesViewModel\" />\n\n    </data>\n\n    <androidx.constraintlayout.widget.ConstraintLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:paddingStart=\"16dp\"\n        android:paddingEnd=\"16dp\"\n        android:paddingBottom=\"16dp\">\n\n        <com.google.android.material.chip.ChipGroup\n            android:id=\"@+id/chip_group\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            app:layout_constraintBottom_toTopOf=\"@id/recycler_view\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:singleSelection=\"true\">\n\n            <com.google.android.material.chip.Chip\n                android:id=\"@+id/popular\"\n                style=\"@style/ChipChoice\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:checked=\"true\"\n                android:color=\"?attr/colorPrimaryVariant\"\n                android:text=\"Popular\" />\n\n            <com.google.android.material.chip.Chip\n                android:id=\"@+id/top_rated\"\n                style=\"@style/ChipChoice\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:color=\"?attr/colorPrimaryVariant\"\n                android:text=\"Top Rated\" />\n\n            <com.google.android.material.chip.Chip\n                android:id=\"@+id/airing_today\"\n                style=\"@style/ChipChoice\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:color=\"?attr/colorPrimaryVariant\"\n                android:text=\"Airing Today\" />\n\n            <com.google.android.material.chip.Chip\n                android:id=\"@+id/on_the_air\"\n                style=\"@style/ChipChoice\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:color=\"?attr/colorPrimaryVariant\"\n                android:text=\"On The Air\" />\n\n        </com.google.android.material.chip.ChipGroup>\n\n        <androidx.recyclerview.widget.RecyclerView\n            android:id=\"@+id/recycler_view\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"0dp\"\n            android:layout_marginTop=\"8dp\"\n            android:visibility=\"visible\"\n            app:layoutManager=\"androidx.recyclerview.widget.GridLayoutManager\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@id/chip_group\"\n            app:layout_constraintVertical_bias=\"0.0\"\n            tools:listitem=\"@layout/movie_item\" />\n\n    </androidx.constraintlayout.widget.ConstraintLayout>\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/tvseries_list.xml b/app/src/main/res/layout/tvseries_list.xml
--- a/app/src/main/res/layout/tvseries_list.xml	(revision bd29834ce9ac9538bbb0135993785e95ffe2819b)
+++ b/app/src/main/res/layout/tvseries_list.xml	(date 1662667113432)
@@ -14,16 +14,15 @@
 
     <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:paddingStart="16dp"
-        android:paddingEnd="16dp"
-        android:paddingBottom="16dp">
+        android:layout_height="match_parent">
 
         <com.google.android.material.chip.ChipGroup
-            android:id="@+id/chip_group"
+            android:id="@+id/chipGroup"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            app:layout_constraintBottom_toTopOf="@id/recycler_view"
+            android:paddingStart="16dp"
+            android:paddingEnd="16dp"
+            app:checkedChip="@+id/popular"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintStart_toStartOf="parent"
             app:layout_constraintTop_toTopOf="parent"
@@ -34,49 +33,80 @@
                 style="@style/ChipChoice"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:checked="true"
-                android:color="?attr/colorPrimaryVariant"
-                android:text="Popular" />
+                android:text="@string/tv_order_popular" />
 
             <com.google.android.material.chip.Chip
-                android:id="@+id/top_rated"
+                android:id="@+id/topRated"
                 style="@style/ChipChoice"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:color="?attr/colorPrimaryVariant"
-                android:text="Top Rated" />
+                android:text="@string/tv_order_top_rated" />
 
             <com.google.android.material.chip.Chip
-                android:id="@+id/airing_today"
+                android:id="@+id/airingToday"
                 style="@style/ChipChoice"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:color="?attr/colorPrimaryVariant"
-                android:text="Airing Today" />
+                android:text="@string/tv_order_airing_today" />
 
             <com.google.android.material.chip.Chip
-                android:id="@+id/on_the_air"
+                android:id="@+id/onTheAir"
                 style="@style/ChipChoice"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:color="?attr/colorPrimaryVariant"
-                android:text="On The Air" />
+                android:text="@string/tv_order_on_the_air" />
 
         </com.google.android.material.chip.ChipGroup>
 
         <androidx.recyclerview.widget.RecyclerView
-            android:id="@+id/recycler_view"
+            android:id="@+id/tvSeriesRecyclerView"
             android:layout_width="0dp"
             android:layout_height="0dp"
-            android:layout_marginTop="8dp"
-            android:visibility="visible"
+            android:clipChildren="false"
+            android:clipToPadding="false"
+            android:paddingStart="8dp"
+            android:paddingEnd="8dp"
+            android:transitionGroup="true"
             app:layoutManager="androidx.recyclerview.widget.GridLayoutManager"
-            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintBottom_toTopOf="@id/errorView"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@id/chip_group"
+            app:layout_constraintTop_toBottomOf="@id/chipGroup"
             app:layout_constraintVertical_bias="0.0"
-            tools:listitem="@layout/movie_item" />
+            tools:listitem="@layout/tvseries_item" />
+
+        <LinearLayout
+            android:id="@+id/errorView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="16dp"
+            android:visibility="gone"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/tvSeriesRecyclerView"
+            tools:visibility="visible">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:padding="8dp"
+                android:text="@string/connection_error_message"
+                android:textAlignment="center"
+                android:textAppearance="?attr/textAppearanceSubtitle2"
+                tools:text="Error" />
+
+            <Button
+                android:id="@+id/retryButton"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_horizontal"
+                android:paddingTop="8dp"
+                android:text="@string/retry_button_label" />
+
+        </LinearLayout>
 
     </androidx.constraintlayout.widget.ConstraintLayout>
+
 </layout>
\ No newline at end of file
